(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{426:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var r=n(1),i=n(9),a=(n(0),n(1128)),o={last_modified_on:"2020-04-16",$schema:"/.meta/.schemas/highlights.json",title:"New Filter Transform",description:"Filter and route your logs based on defined conditions",author_github:"https://github.com/binarylogic",pr_numbers:[2088],release:"0.9.0",hide_on_release_notes:!1,tags:["type: new feature","domain: transforms","transform: filter"]},s={date:"2020-03-31T00:00:00.000Z",description:"Filter and route your logs based on defined conditions",permalink:"/highlights/2020-03-31-filter-transform",readingTime:"1 min read",source:"@site/highlights/2020-03-31-filter-transform.md",tags:[{label:"type: new feature",permalink:"/highlights/tags/type-new-feature"},{label:"domain: transforms",permalink:"/highlights/tags/domain-transforms"},{label:"transform: filter",permalink:"/highlights/tags/transform-filter"}],title:"New Filter Transform",truncated:!1,prevItem:{title:"More Condition Predicates",permalink:"/highlights/2020-04-01-more-condition-predicates"},nextItem:{title:"A New Guides Section",permalink:"/highlights/2020-03-31-guides-section"}},l=[{value:"Get Started",id:"get-started",children:[]}],c={rightToc:l};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"We recently introduced a concept of conditions, which you can see in our\n",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/reference/transforms/swimlanes/"}),Object(a.b)("inlineCode",{parentName:"a"},"swimlanes")," transform")," as well as our ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/reference/tests/"}),"unit\ntests feature"),". This paved the way for a new ",Object(a.b)("inlineCode",{parentName:"p"},"filter"),"\ntransform, allowing you to filter events based on a set of conditions. This\nis replaces our old ",Object(a.b)("inlineCode",{parentName:"p"},"field_filter")," transform since it is much more expressive."),Object(a.b)("h2",{id:"get-started"},"Get Started"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.haproxy_errors]\n  # General\n  type = "filter"\n  inputs = ["my-source-id"]\n\n  # Conditions\n  condition."level.eq" = "error"\n  condition."service.eq" = "haproxy"\n')),Object(a.b)("p",null,"Check out the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/reference/transforms/filter/"}),"docs")," for a fill list of available\nconditions."))}d.isMDXComponent=!0}}]);