(window.webpackJsonp=window.webpackJsonp||[]).push([[282],{1139:function(e,t,n){"use strict";var a=n(24),r=n(13),l=n(27),i=n(84),o=n(85),s=n(26),c=n(1145),u=n(86);r(r.S+r.F*!n(81)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,r,p,d=l(e),m="function"==typeof this?this:Array,f=arguments.length,b=f>1?arguments[1]:void 0,h=void 0!==b,v=0,g=u(d);if(h&&(b=a(b,f>2?arguments[2]:void 0,2)),null==g||m==Array&&o(g))for(n=new m(t=s(d.length));t>v;v++)c(n,v,h?b(d[v],v):d[v]);else for(p=g.call(d),n=new m;!(r=p.next()).done;v++)c(n,v,h?i(p,b,[r.value,v],!0):r.value);return n.length=v,n}})},1140:function(e,t,n){"use strict";var a=n(1146),r=n(1141);e.exports=n(1147)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return a.def(r(this,"Set"),e=0===e?0:e,e)}},a)},1141:function(e,t,n){var a=n(12);e.exports=function(e,t){if(!a(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},1142:function(e,t,n){"use strict";var a=n(0),r=n.n(a),l=n(1137),i=n(1136),o=n.n(i);n(131);t.a=function(e){var t=e.className,n=e.size,a=e.style,i=e.text;return r.a.createElement(l.a,{to:"/vic/",className:o()("vic","vic--"+n,t)},r.a.createElement("div",{className:"icon"},r.a.createElement("img",{src:"/img/vicmojis/vic"+a+".svg",alt:"Vic - The Vector Mascot"})),i&&r.a.createElement("div",{className:"text"},i))}},1144:function(e,t,n){"use strict";var a=n(0),r=n.n(a),l=(n(1137),n(1142));t.a=function(e){var t=e.text;return r.a.createElement("section",{className:"empty"},r.a.createElement(l.a,{style:"no",text:t}))}},1145:function(e,t,n){"use strict";var a=n(28),r=n(53);e.exports=function(e,t,n){t in e?a.f(e,t,r(0,n)):e[t]=n}},1146:function(e,t,n){"use strict";var a=n(28).f,r=n(82),l=n(80),i=n(24),o=n(78),s=n(79),c=n(54),u=n(83),p=n(87),d=n(10),m=n(1143).fastKey,f=n(1141),b=d?"_s":"size",h=function(e,t){var n,a=m(t);if("F"!==a)return e._i[a];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,c){var u=e((function(e,a){o(e,u,t,"_i"),e._t=t,e._i=r(null),e._f=void 0,e._l=void 0,e[b]=0,null!=a&&s(a,n,e[c],e)}));return l(u.prototype,{clear:function(){for(var e=f(this,t),n=e._i,a=e._f;a;a=a.n)a.r=!0,a.p&&(a.p=a.p.n=void 0),delete n[a.i];e._f=e._l=void 0,e[b]=0},delete:function(e){var n=f(this,t),a=h(n,e);if(a){var r=a.n,l=a.p;delete n._i[a.i],a.r=!0,l&&(l.n=r),r&&(r.p=l),n._f==a&&(n._f=r),n._l==a&&(n._l=l),n[b]--}return!!a},forEach:function(e){f(this,t);for(var n,a=i(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(a(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!h(f(this,t),e)}}),d&&a(u.prototype,"size",{get:function(){return f(this,t)[b]}}),u},def:function(e,t,n){var a,r,l=h(e,t);return l?l.v=n:(e._l=l={i:r=m(t,!0),k:t,v:n,p:a=e._l,n:void 0,r:!1},e._f||(e._f=l),a&&(a.n=l),e[b]++,"F"!==r&&(e._i[r]=l)),e},getEntry:h,setStrong:function(e,t,n){c(e,t,(function(e,n){this._t=f(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?u(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,u(1))}),n?"entries":"values",!n,!0),p(t)}}},1147:function(e,t,n){"use strict";var a=n(5),r=n(13),l=n(15),i=n(80),o=n(1143),s=n(79),c=n(78),u=n(12),p=n(14),d=n(81),m=n(39),f=n(1148);e.exports=function(e,t,n,b,h,v){var g=a[e],j=g,O=h?"set":"add",y=j&&j.prototype,_={},N=function(e){var t=y[e];l(y,e,"delete"==e||"has"==e?function(e){return!(v&&!u(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!u(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof j&&(v||y.forEach&&!p((function(){(new j).entries().next()})))){var w=new j,E=w[O](v?{}:-0,1)!=w,x=p((function(){w.has(1)})),S=d((function(e){new j(e)})),k=!v&&p((function(){for(var e=new j,t=5;t--;)e[O](t,t);return!e.has(-0)}));S||((j=t((function(t,n){c(t,j,e);var a=f(new g,t,j);return null!=n&&s(n,h,a[O],a),a}))).prototype=y,y.constructor=j),(x||k)&&(N("delete"),N("has"),h&&N("get")),(k||E)&&N(O),v&&y.clear&&delete y.clear}else j=b.getConstructor(t,e,h,O),i(j.prototype,n),o.NEED=!0;return m(j,e),_[e]=j,r(r.G+r.W+r.F*(j!=g),_),v||b.setStrong(j,e,h),j}},1148:function(e,t,n){var a=n(12),r=n(1149).set;e.exports=function(e,t,n){var l,i=t.constructor;return i!==n&&"function"==typeof i&&(l=i.prototype)!==n.prototype&&a(l)&&r&&r(e,l),e}},1149:function(e,t,n){var a=n(12),r=n(8),l=function(e,t){if(r(e),!a(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,a){try{(a=n(24)(Function.call,n(1163).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(r){t=!0}return function(e,n){return l(e,n),t?e.__proto__=n:a(e,n),e}}({},!1):void 0),check:l}},1150:function(e,t,n){"use strict";n(1140),n(77),n(1139),n(25),n(20),n(19),n(1138);var a=n(0),r=n.n(a),l=n(1157),i=n.n(l);t.a=function(e){var t=e.currentState,n=e.humanize,a=e.icon,l=e.name,o=e.setState,s=e.values;if(0==s.size)return null;var c=Array.from(s);return r.a.createElement(r.a.Fragment,null,c.map((function(e,s){var c="string"==typeof e&&n?i()(e):e;return r.a.createElement("label",{key:s},r.a.createElement("input",{checked:t.has(e),name:l,onChange:function(n){var a=new Set(t);n.currentTarget.checked?a.add(e):a.delete(e),o(a)},type:"checkbox"}),c&&r.a.createElement(r.a.Fragment,null,a?r.a.createElement("i",{className:"feather icon-"+a}):""," ",c))})))}},1153:function(e,t,n){"use strict";var a=n(13),r=n(1154),l=n(27),i=n(26),o=n(29),s=n(1166);a(a.P,"Array",{flatMap:function(e){var t,n,a=l(this);return o(e),t=i(a.length),n=s(a,0),r(n,a,a,t,0,1,e,arguments[1]),n}}),n(88)("flatMap")},1154:function(e,t,n){"use strict";var a=n(1165),r=n(12),l=n(26),i=n(24),o=n(2)("isConcatSpreadable");e.exports=function e(t,n,s,c,u,p,d,m){for(var f,b,h=u,v=0,g=!!d&&i(d,m,3);v<c;){if(v in s){if(f=g?g(s[v],v,n):s[v],b=!1,r(f)&&(b=void 0!==(b=f[o])?!!b:a(f)),b&&p>0)h=e(t,n,f,l(f.length),h,p-1)-1;else{if(h>=9007199254740991)throw TypeError();t[h]=f}h++}v++}return h}},1155:function(e,t,n){"use strict";n(1138),n(1151),n(1152),n(1139),n(1153),n(25),n(20),n(19),n(77),n(1140);var a=n(0),r=n.n(a),l=n(1150),i=n(1144),o=n(1158),s=n.n(o);t.a=function(e){var t=e.children,n=e.filters,o=Object(a.useState)(!1),c=o[0],u=o[1],p=Object(a.useState)(new Set),d=p[0],m=p[1],f=Object(a.useState)(!1),b=f[0],h=f[1],v=Object(a.useState)(null),g=v[0],j=v[1],O=[];t&&(O=Array.isArray(t)?t:[t]);var y=O.some((function(e){return e.props.common})),_=s()(O).flatMap((function(e){return e.props.groups})).uniq().value(),N=O.some((function(e){return e.props.required})),w=O;return c&&(w=w.filter((function(e){return e.props.common}))),d.size>0&&(w=w.filter((function(e){return Array.from(d).every((function(t){return e.props.groups.includes(t)}))}))),b&&(w=w.filter((function(e){return e.props.required}))),g&&(w=w.filter((function(e){return e.props.name.toLowerCase().includes(g.toLowerCase())}))),r.a.createElement(r.a.Fragment,null,O.length>1&&!1!==n?r.a.createElement("div",{className:"filters"},r.a.createElement("div",{className:"search"},r.a.createElement("span",{className:"search--result-count"},w.length," items"),r.a.createElement("input",{className:"input--text input--lg",type:"text",onChange:function(e){return j(e.currentTarget.value)},placeholder:"\ud83d\udd0d Search..."})),r.a.createElement("div",{className:"filter"},r.a.createElement("div",{className:"filter--choices"},r.a.createElement(l.a,{values:_,currentState:d,setState:m}),y&&r.a.createElement("label",{title:"Only show popular/common results"},r.a.createElement("input",{type:"checkbox",onChange:function(e){return u(e.currentTarget.checked)},checked:c}),"common"),N&&r.a.createElement("label",{title:"Only show required results"},r.a.createElement("input",{type:"checkbox",onChange:function(e){return h(e.currentTarget.checked)},checked:b}),"required")))):null,!Array.isArray(w)||w.length>0?r.a.createElement("ul",{className:"connected-list"},w):r.a.createElement(i.a,{text:"no components found"}))}},1156:function(e,t,n){"use strict";n(89),n(25),n(20),n(19),n(52),n(1138),n(1151),n(1152);var a=n(0),r=n.n(a),l=n(1136),i=n.n(l),o=(n(1128),n(1167));function s(e){return e.includes(".")?'"'+e+'"':e}function c(e){return"string"==typeof e&&e.includes("\n")?'"""\n'+e+'\n"""':JSON.stringify(e)}function u(e,t){return(n=t)&&n.constructor===Object?"name"in t&&"value"in t?s(t.name)+" = "+c(t.value):s(Object.keys(t)[0])+" = "+c(Object.values(t)[0]):e?s(e)+" = "+c(t):c(t);var n}function p(e){var t=e.values,n=[];if(Array.isArray(t))for(var a in t){var l=t[a];n.push(r.a.createElement("code",{key:l},c(l))),n.push(" ")}else for(var i in t)n.push(r.a.createElement("code",{key:i,className:"with-info-icon",title:t[i]},c(i))),n.push(" ");return n}function d(e){var t=e.name,n=e.path,a=e.values,l="";return a.forEach((function(e){n&&(l+=n+"."),l+=u(t,e)+"\n"})),r.a.createElement("div",null,r.a.createElement(o.a,{className:"language-toml"},l))}function m(e){var t=e.unit,n=e.value,a="";return t&&(a=r.a.createElement(r.a.Fragment,null," (",t,")")),r.a.createElement(r.a.Fragment,null,r.a.createElement("code",null,c(n)),a)}function f(e){var t=e.value,n=Object.keys(t)[0],a=Object.values(t)[0];return""==a&&(a=null),r.a.createElement("span",null,r.a.createElement("code",null,r.a.createElement("a",{href:"#"+n},n))," ","= ",r.a.createElement("code",null,c(a)))}function b(e){var t=e.defaultValue,n=e.enumValues,l=e.examples,i=(e.groups,e.name),o=e.path,s=e.relevantWhen,c=e.required,u=e.unit,b=e.warnings,h=Object(a.useState)(!1),v=h[0],g=h[1];return r.a.createElement("ul",{className:"info"},b&&b.length>0&&b.map((function(e,t){return r.a.createElement("li",{key:t,className:"warning"},r.a.createElement("i",{className:"feather icon-alert-triangle"})," WARNING:"," ",e.text)})),s&&r.a.createElement("li",null,"Only ",c?"required":"relevant"," when:"," ",r.a.createElement(f,{value:s})),void 0!==t?null!==t?r.a.createElement("li",null,"Default: ",r.a.createElement(m,{unit:u,value:t})):r.a.createElement("li",null,"No default"):null,n&&r.a.createElement("li",null,"Enum, must be one of: ",r.a.createElement(p,{values:n})),(l.length>1||l[0]!=t)&&r.a.createElement("li",null,r.a.createElement("div",{className:"show-more",onClick:function(){return g(!v)}},v?"Hide examples":"View examples"),v&&r.a.createElement(d,{name:i,path:o,values:l})))}t.a=function(e){var t=e.children,n=e.common,l=e.defaultValue,o=e.enumValues,s=e.examples,c=e.groups,u=e.name,p=e.path,d=e.relevantWhen,m=e.required,f=e.templateable,h=e.type,v=e.unit,g=e.warnings,j=Object(a.useState)(!1),O=j[0],y=(j[1],t);return O&&(y=y.filter((function(e){return"p"!=e.props.originalType}))),r.a.createElement("li",{className:i()({"field-required":m,"field-collapsed":O}),required:m},r.a.createElement("div",{className:"badges"},f&&r.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),h&&r.a.createElement("span",{className:"badge badge--secondary"},h,v&&r.a.createElement(r.a.Fragment,null," (",v,")")),o&&Object.keys(o).length>0&&r.a.createElement("span",{className:"badge badge--secondary with-info-icon",title:"This option is an enumation and only allows specific values"},"enum"),n&&r.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This is a popular that we recommend for getting started"},"common"),m?r.a.createElement("span",{className:"badge badge--danger"},"required",d&&"*"):r.a.createElement("span",{className:"badge badge--secondary"},"optional")),y,!O&&"table"!=h&&r.a.createElement(b,{defaultValue:l,enumValues:o,examples:s,groups:c,name:u,path:p,relevantWhen:d,required:m,unit:v,warnings:g}))}},437:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return f}));var a=n(1),r=n(9),l=(n(0),n(1128)),i=n(1155),o=n(1156),s=n(1161),c=n(1160),u={last_modified_on:"2020-06-10",component_title:"JSON Parser",description:"The Vector `json_parser` transform accepts and outputs `log` events, allowing you to parse a log field value as JSON.",event_types:["log"],function_category:"parse",issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+json_parser%22",operating_systems:["Linux","MacOS","Windows"],sidebar_label:'json_parser|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/json_parser.rs",status:"prod-ready",title:"JSON Parser Transform",unsupported_operating_systems:[]},p={id:"reference/transforms/json_parser",title:"JSON Parser Transform",description:"The Vector `json_parser` transform accepts and outputs `log` events, allowing you to parse a log field value as JSON.",source:"@site/docs/reference/transforms/json_parser.md",permalink:"/docs/reference/transforms/json_parser",editUrl:"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/json_parser.md",sidebar_label:'json_parser|["log"]',sidebar:"docs",previous:{title:"Grok Parser Transform",permalink:"/docs/reference/transforms/grok_parser"},next:{title:"Log to Metric Transform",permalink:"/docs/reference/transforms/log_to_metric"}},d=[{value:"Configuration",id:"configuration",children:[{value:"drop_field",id:"drop_field",children:[]},{value:"drop_invalid",id:"drop_invalid",children:[]},{value:"field",id:"field",children:[]},{value:"overwrite_target",id:"overwrite_target",children:[]},{value:"target_field",id:"target_field",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Chaining / Unwrapping",id:"chaining--unwrapping",children:[]},{value:"Complex Processing",id:"complex-processing",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Field Notation Syntax",id:"field-notation-syntax",children:[]},{value:"Invalid JSON",id:"invalid-json",children:[]},{value:"Merge Conflicts",id:"merge-conflicts",children:[]}]}],m={rightToc:d};function f(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"json_parser")," transform\naccepts and outputs ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events, allowing you to parse\na log field value as JSON."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)(s.a,{block:!0,defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"common",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.my_transform_id]\n  type = "json_parser" # required\n  inputs = ["my-source-or-transform-id"] # required\n  drop_field = true # optional, default\n  drop_invalid = true # required\n  field = "message" # optional, default\n'))),Object(l.b)(c.a,{value:"advanced",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.my_transform_id]\n  type = "json_parser" # required\n  inputs = ["my-source-or-transform-id"] # required\n  drop_field = true # optional, default\n  drop_invalid = true # required\n  field = "message" # optional, default\n  overwrite_target = false # optional, default\n  target_field = "root_field" # optional, no default\n')))),Object(l.b)(i.a,{filters:!0,mdxType:"Fields"},Object(l.b)(o.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:"drop_field",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"drop_field"},"drop_field"),Object(l.b)("p",null,"If the specified ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," should be dropped (removed) after parsing. If parsing\nfails, the field will not be removed, irrespective of this setting.")),Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[!0],groups:[],name:"drop_invalid",path:null,relevantWhen:null,required:!0,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"drop_invalid"},"drop_invalid"),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"true")," events with invalid JSON will be dropped, otherwise the event will be\nkept and passed through.\nSee ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#invalid-json"}),"Invalid JSON")," for more info.")),Object(l.b)(o.a,{common:!0,defaultValue:"message",enumValues:null,examples:["message","parent.child","array[0]"],groups:[],name:"field",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"field"},"field"),Object(l.b)("p",null,"The log field to decode as JSON. Must be a ",Object(l.b)("inlineCode",{parentName:"p"},"string")," value type.\nSee ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field-notation-syntax"}),"Field Notation Syntax")," and ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#invalid-json"}),"Invalid JSON")," for more info.")),Object(l.b)(o.a,{common:!1,defaultValue:!1,enumValues:null,examples:[!1,!0],groups:[],name:"overwrite_target",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"overwrite_target"},"overwrite_target"),Object(l.b)("p",null,"If ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#target_field"}),Object(l.b)("inlineCode",{parentName:"a"},"target_field"))," is set and the log contains a field of the same name as the\ntarget, it will only be overwritten if this is set to ",Object(l.b)("inlineCode",{parentName:"p"},"true"),".")),Object(l.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:["root_field","parent.child"],groups:[],name:"target_field",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"target_field"},"target_field"),Object(l.b)("p",null,"If this setting is present, the parsed JSON will be inserted into the log as a\nsub-object with this name. If a field with the same name already exists, the\nparser will fail and produce an error.\nSee ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field-notation-syntax"}),"Field Notation Syntax")," for more info."))),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)(s.a,{block:!0,defaultValue:"simple",select:!1,values:[{label:"Simple",value:"simple"},{label:"Wrapped",value:"wrapped"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"simple",mdxType:"TabItem"},Object(l.b)("p",null,"Given the following log event:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "message": "{"key": "value"}"\n}\n')),Object(l.b)("p",null,"You can parse the JSON with:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.json]\n  inputs = ["<source_id>"]\n  type   = "json_parser"\n  field  = "message"\n')),Object(l.b)("p",null,"This would produce the following event as output:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "key": "value"\n}\n')),Object(l.b)("p",null,"By default, Vector drops fields after parsing them via the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#drop_field"}),Object(l.b)("inlineCode",{parentName:"a"},"drop_field")),"\noption.")),Object(l.b)(c.a,{value:"wrapped",mdxType:"TabItem"},Object(l.b)("p",null,"It is possible to chain ",Object(l.b)("inlineCode",{parentName:"p"},"json_parser"),' transforms to effectively "unwrap"\nnested JSON documents. For example, give this log event:'),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "message": "{"parent": "{"child": "value2"}"}"\n}\n')),Object(l.b)("p",null,"You could unwrap the JSON with the following transforms:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.root_json]\n  inputs = ["<source_id>"]\n  type   = "json_parser"\n  field  = "message"\n\n[transforms.parent_json]\n  inputs = ["root_json"]\n  type   = "json_parser"\n  field  = "parent"\n\n[transforms.child_json]\n  inputs = ["parent_json"]\n  type   = "json_parser"\n  field  = "child"\n')),Object(l.b)("p",null,"This would produce the following event as output:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "child": "value2"\n}\n')),Object(l.b)("p",null,"By default, Vector drops fields after parsing them via the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#drop_field"}),Object(l.b)("inlineCode",{parentName:"a"},"drop_field")),"\noption."))),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"chaining--unwrapping"},"Chaining / Unwrapping"),Object(l.b)("p",null,"Please see the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#examples"}),"Examples section"),"."),Object(l.b)("h3",{id:"complex-processing"},"Complex Processing"),Object(l.b)("p",null,"If you encounter limitations with the ",Object(l.b)("inlineCode",{parentName:"p"},"json_parser"),"\ntransform then we recommend using a ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://vector.dev/components/?functions%5B%5D=program"}),"runtime transform"),".\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime."),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables")," section."),Object(l.b)("h3",{id:"field-notation-syntax"},"Field Notation Syntax"),Object(l.b)("p",null,"The ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," and ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#target_field"}),Object(l.b)("inlineCode",{parentName:"a"},"target_field"))," options\nsupport ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/field-path-notation/"}),"Vector's field notation syntax"),",\nenabling access to root-level, nested, and array field values. For example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.my_json_parser_transform_id]\n  # ...\n  field = "message"\n  field = "parent.child"\n  field = "array[0]"\n  # ...\n')),Object(l.b)("p",null,"You can learn more about Vector's field notation in the\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/field-path-notation/"}),"field notation reference"),"."),Object(l.b)("h3",{id:"invalid-json"},"Invalid JSON"),Object(l.b)("p",null,"If the value for the specified ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," is not valid JSON you can control keep\nor discard the event with the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#drop_invalid"}),Object(l.b)("inlineCode",{parentName:"a"},"drop_invalid"))," option. Setting it to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," will\ndiscard the event and drop it entirely. Setting it to ",Object(l.b)("inlineCode",{parentName:"p"},"false")," will keep the\nevent and pass it through. Note that passing through the event could cause\nproblems and violate assumptions about the structure of your event."),Object(l.b)("h3",{id:"merge-conflicts"},"Merge Conflicts"),Object(l.b)("h4",{id:"key-conflicts"},"Key conflicts"),Object(l.b)("p",null,"Any key present in the decoded JSON will override existin keys in the event."),Object(l.b)("h4",{id:"object-conflicts"},"Object conflicts"),Object(l.b)("p",null,"If the decoded JSON includes nested fields it will be ",Object(l.b)("em",{parentName:"p"},"deep")," merged into the\nevent. For example, given the following event:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "message": "{\\"parent\\": {\\"child2\\": \\"value2\\"}}",\n  "parent": {\n    "child1": "value1"\n  }\n}\n')),Object(l.b)("p",null,"Parsing the ",Object(l.b)("inlineCode",{parentName:"p"},'"message"')," field would result the following structure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "parent": {\n    "child1": "value1",\n    "child2": "value2"\n  }\n}\n')),Object(l.b)("p",null,"Notice that the ",Object(l.b)("inlineCode",{parentName:"p"},"parent.child1")," key was preserved."))}f.isMDXComponent=!0}}]);