(window.webpackJsonp=window.webpackJsonp||[]).push([[748],{1139:function(e,t,a){"use strict";var n=a(24),r=a(13),l=a(27),i=a(84),o=a(85),c=a(26),s=a(1145),m=a(86);r(r.S+r.F*!a(81)((function(e){Array.from(e)})),"Array",{from:function(e){var t,a,r,b,p=l(e),u="function"==typeof this?this:Array,d=arguments.length,f=d>1?arguments[1]:void 0,g=void 0!==f,O=0,j=m(p);if(g&&(f=n(f,d>2?arguments[2]:void 0,2)),null==j||u==Array&&o(j))for(a=new u(t=c(p.length));t>O;O++)s(a,O,g?f(p[O],O):p[O]);else for(b=j.call(p),a=new u;!(r=b.next()).done;O++)s(a,O,g?i(b,f,[r.value,O],!0):r.value);return a.length=O,a}})},1140:function(e,t,a){"use strict";var n=a(1146),r=a(1141);e.exports=a(1147)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return n.def(r(this,"Set"),e=0===e?0:e,e)}},n)},1141:function(e,t,a){var n=a(12);e.exports=function(e,t){if(!n(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},1142:function(e,t,a){"use strict";var n=a(0),r=a.n(n),l=a(1137),i=a(1136),o=a.n(i);a(131);t.a=function(e){var t=e.className,a=e.size,n=e.style,i=e.text;return r.a.createElement(l.a,{to:"/vic/",className:o()("vic","vic--"+a,t)},r.a.createElement("div",{className:"icon"},r.a.createElement("img",{src:"/img/vicmojis/vic"+n+".svg",alt:"Vic - The Vector Mascot"})),i&&r.a.createElement("div",{className:"text"},i))}},1144:function(e,t,a){"use strict";var n=a(0),r=a.n(n),l=(a(1137),a(1142));t.a=function(e){var t=e.text;return r.a.createElement("section",{className:"empty"},r.a.createElement(l.a,{style:"no",text:t}))}},1145:function(e,t,a){"use strict";var n=a(28),r=a(53);e.exports=function(e,t,a){t in e?n.f(e,t,r(0,a)):e[t]=a}},1146:function(e,t,a){"use strict";var n=a(28).f,r=a(82),l=a(80),i=a(24),o=a(78),c=a(79),s=a(54),m=a(83),b=a(87),p=a(10),u=a(1143).fastKey,d=a(1141),f=p?"_s":"size",g=function(e,t){var a,n=u(t);if("F"!==n)return e._i[n];for(a=e._f;a;a=a.n)if(a.k==t)return a};e.exports={getConstructor:function(e,t,a,s){var m=e((function(e,n){o(e,m,t,"_i"),e._t=t,e._i=r(null),e._f=void 0,e._l=void 0,e[f]=0,null!=n&&c(n,a,e[s],e)}));return l(m.prototype,{clear:function(){for(var e=d(this,t),a=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete a[n.i];e._f=e._l=void 0,e[f]=0},delete:function(e){var a=d(this,t),n=g(a,e);if(n){var r=n.n,l=n.p;delete a._i[n.i],n.r=!0,l&&(l.n=r),r&&(r.p=l),a._f==n&&(a._f=r),a._l==n&&(a._l=l),a[f]--}return!!n},forEach:function(e){d(this,t);for(var a,n=i(e,arguments.length>1?arguments[1]:void 0,3);a=a?a.n:this._f;)for(n(a.v,a.k,this);a&&a.r;)a=a.p},has:function(e){return!!g(d(this,t),e)}}),p&&n(m.prototype,"size",{get:function(){return d(this,t)[f]}}),m},def:function(e,t,a){var n,r,l=g(e,t);return l?l.v=a:(e._l=l={i:r=u(t,!0),k:t,v:a,p:n=e._l,n:void 0,r:!1},e._f||(e._f=l),n&&(n.n=l),e[f]++,"F"!==r&&(e._i[r]=l)),e},getEntry:g,setStrong:function(e,t,a){s(e,t,(function(e,a){this._t=d(e,t),this._k=a,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?m(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,m(1))}),a?"entries":"values",!a,!0),b(t)}}},1147:function(e,t,a){"use strict";var n=a(5),r=a(13),l=a(15),i=a(80),o=a(1143),c=a(79),s=a(78),m=a(12),b=a(14),p=a(81),u=a(39),d=a(1148);e.exports=function(e,t,a,f,g,O){var j=n[e],h=j,v=g?"set":"add",y=h&&h.prototype,N={},_=function(e){var t=y[e];l(y,e,"delete"==e||"has"==e?function(e){return!(O&&!m(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return O&&!m(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,a){return t.call(this,0===e?0:e,a),this})};if("function"==typeof h&&(O||y.forEach&&!b((function(){(new h).entries().next()})))){var w=new h,x=w[v](O?{}:-0,1)!=w,T=b((function(){w.has(1)})),C=p((function(e){new h(e)})),E=!O&&b((function(){for(var e=new h,t=5;t--;)e[v](t,t);return!e.has(-0)}));C||((h=t((function(t,a){s(t,h,e);var n=d(new j,t,h);return null!=a&&c(a,g,n[v],n),n}))).prototype=y,y.constructor=h),(T||E)&&(_("delete"),_("has"),g&&_("get")),(E||x)&&_(v),O&&y.clear&&delete y.clear}else h=f.getConstructor(t,e,g,v),i(h.prototype,a),o.NEED=!0;return u(h,e),N[e]=h,r(r.G+r.W+r.F*(h!=j),N),O||f.setStrong(h,e,g),h}},1148:function(e,t,a){var n=a(12),r=a(1149).set;e.exports=function(e,t,a){var l,i=t.constructor;return i!==a&&"function"==typeof i&&(l=i.prototype)!==a.prototype&&n(l)&&r&&r(e,l),e}},1149:function(e,t,a){var n=a(12),r=a(8),l=function(e,t){if(r(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=a(24)(Function.call,a(1163).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(r){t=!0}return function(e,a){return l(e,a),t?e.__proto__=a:n(e,a),e}}({},!1):void 0),check:l}},1150:function(e,t,a){"use strict";a(1140),a(77),a(1139),a(25),a(20),a(19),a(1138);var n=a(0),r=a.n(n),l=a(1157),i=a.n(l);t.a=function(e){var t=e.currentState,a=e.humanize,n=e.icon,l=e.name,o=e.setState,c=e.values;if(0==c.size)return null;var s=Array.from(c);return r.a.createElement(r.a.Fragment,null,s.map((function(e,c){var s="string"==typeof e&&a?i()(e):e;return r.a.createElement("label",{key:c},r.a.createElement("input",{checked:t.has(e),name:l,onChange:function(a){var n=new Set(t);a.currentTarget.checked?n.add(e):n.delete(e),o(n)},type:"checkbox"}),s&&r.a.createElement(r.a.Fragment,null,n?r.a.createElement("i",{className:"feather icon-"+n}):""," ",s))})))}},1153:function(e,t,a){"use strict";var n=a(13),r=a(1154),l=a(27),i=a(26),o=a(29),c=a(1166);n(n.P,"Array",{flatMap:function(e){var t,a,n=l(this);return o(e),t=i(n.length),a=c(n,0),r(a,n,n,t,0,1,e,arguments[1]),a}}),a(88)("flatMap")},1154:function(e,t,a){"use strict";var n=a(1165),r=a(12),l=a(26),i=a(24),o=a(2)("isConcatSpreadable");e.exports=function e(t,a,c,s,m,b,p,u){for(var d,f,g=m,O=0,j=!!p&&i(p,u,3);O<s;){if(O in c){if(d=j?j(c[O],O,a):c[O],f=!1,r(d)&&(f=void 0!==(f=d[o])?!!f:n(d)),f&&b>0)g=e(t,a,d,l(d.length),g,b-1)-1;else{if(g>=9007199254740991)throw TypeError();t[g]=d}g++}O++}return g}},1155:function(e,t,a){"use strict";a(1138),a(1151),a(1152),a(1139),a(1153),a(25),a(20),a(19),a(77),a(1140);var n=a(0),r=a.n(n),l=a(1150),i=a(1144),o=a(1158),c=a.n(o);t.a=function(e){var t=e.children,a=e.filters,o=Object(n.useState)(!1),s=o[0],m=o[1],b=Object(n.useState)(new Set),p=b[0],u=b[1],d=Object(n.useState)(!1),f=d[0],g=d[1],O=Object(n.useState)(null),j=O[0],h=O[1],v=[];t&&(v=Array.isArray(t)?t:[t]);var y=v.some((function(e){return e.props.common})),N=c()(v).flatMap((function(e){return e.props.groups})).uniq().value(),_=v.some((function(e){return e.props.required})),w=v;return s&&(w=w.filter((function(e){return e.props.common}))),p.size>0&&(w=w.filter((function(e){return Array.from(p).every((function(t){return e.props.groups.includes(t)}))}))),f&&(w=w.filter((function(e){return e.props.required}))),j&&(w=w.filter((function(e){return e.props.name.toLowerCase().includes(j.toLowerCase())}))),r.a.createElement(r.a.Fragment,null,v.length>1&&!1!==a?r.a.createElement("div",{className:"filters"},r.a.createElement("div",{className:"search"},r.a.createElement("span",{className:"search--result-count"},w.length," items"),r.a.createElement("input",{className:"input--text input--lg",type:"text",onChange:function(e){return h(e.currentTarget.value)},placeholder:"\ud83d\udd0d Search..."})),r.a.createElement("div",{className:"filter"},r.a.createElement("div",{className:"filter--choices"},r.a.createElement(l.a,{values:N,currentState:p,setState:u}),y&&r.a.createElement("label",{title:"Only show popular/common results"},r.a.createElement("input",{type:"checkbox",onChange:function(e){return m(e.currentTarget.checked)},checked:s}),"common"),_&&r.a.createElement("label",{title:"Only show required results"},r.a.createElement("input",{type:"checkbox",onChange:function(e){return g(e.currentTarget.checked)},checked:f}),"required")))):null,!Array.isArray(w)||w.length>0?r.a.createElement("ul",{className:"connected-list"},w):r.a.createElement(i.a,{text:"no components found"}))}},1156:function(e,t,a){"use strict";a(89),a(25),a(20),a(19),a(52),a(1138),a(1151),a(1152);var n=a(0),r=a.n(n),l=a(1136),i=a.n(l),o=(a(1128),a(1167));function c(e){return e.includes(".")?'"'+e+'"':e}function s(e){return"string"==typeof e&&e.includes("\n")?'"""\n'+e+'\n"""':JSON.stringify(e)}function m(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?c(t.name)+" = "+s(t.value):c(Object.keys(t)[0])+" = "+s(Object.values(t)[0]):e?c(e)+" = "+s(t):s(t);var a}function b(e){var t=e.values,a=[];if(Array.isArray(t))for(var n in t){var l=t[n];a.push(r.a.createElement("code",{key:l},s(l))),a.push(" ")}else for(var i in t)a.push(r.a.createElement("code",{key:i,className:"with-info-icon",title:t[i]},s(i))),a.push(" ");return a}function p(e){var t=e.name,a=e.path,n=e.values,l="";return n.forEach((function(e){a&&(l+=a+"."),l+=m(t,e)+"\n"})),r.a.createElement("div",null,r.a.createElement(o.a,{className:"language-toml"},l))}function u(e){var t=e.unit,a=e.value,n="";return t&&(n=r.a.createElement(r.a.Fragment,null," (",t,")")),r.a.createElement(r.a.Fragment,null,r.a.createElement("code",null,s(a)),n)}function d(e){var t=e.value,a=Object.keys(t)[0],n=Object.values(t)[0];return""==n&&(n=null),r.a.createElement("span",null,r.a.createElement("code",null,r.a.createElement("a",{href:"#"+a},a))," ","= ",r.a.createElement("code",null,s(n)))}function f(e){var t=e.defaultValue,a=e.enumValues,l=e.examples,i=(e.groups,e.name),o=e.path,c=e.relevantWhen,s=e.required,m=e.unit,f=e.warnings,g=Object(n.useState)(!1),O=g[0],j=g[1];return r.a.createElement("ul",{className:"info"},f&&f.length>0&&f.map((function(e,t){return r.a.createElement("li",{key:t,className:"warning"},r.a.createElement("i",{className:"feather icon-alert-triangle"})," WARNING:"," ",e.text)})),c&&r.a.createElement("li",null,"Only ",s?"required":"relevant"," when:"," ",r.a.createElement(d,{value:c})),void 0!==t?null!==t?r.a.createElement("li",null,"Default: ",r.a.createElement(u,{unit:m,value:t})):r.a.createElement("li",null,"No default"):null,a&&r.a.createElement("li",null,"Enum, must be one of: ",r.a.createElement(b,{values:a})),(l.length>1||l[0]!=t)&&r.a.createElement("li",null,r.a.createElement("div",{className:"show-more",onClick:function(){return j(!O)}},O?"Hide examples":"View examples"),O&&r.a.createElement(p,{name:i,path:o,values:l})))}t.a=function(e){var t=e.children,a=e.common,l=e.defaultValue,o=e.enumValues,c=e.examples,s=e.groups,m=e.name,b=e.path,p=e.relevantWhen,u=e.required,d=e.templateable,g=e.type,O=e.unit,j=e.warnings,h=Object(n.useState)(!1),v=h[0],y=(h[1],t);return v&&(y=y.filter((function(e){return"p"!=e.props.originalType}))),r.a.createElement("li",{className:i()({"field-required":u,"field-collapsed":v}),required:u},r.a.createElement("div",{className:"badges"},d&&r.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),g&&r.a.createElement("span",{className:"badge badge--secondary"},g,O&&r.a.createElement(r.a.Fragment,null," (",O,")")),o&&Object.keys(o).length>0&&r.a.createElement("span",{className:"badge badge--secondary with-info-icon",title:"This option is an enumation and only allows specific values"},"enum"),a&&r.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This is a popular that we recommend for getting started"},"common"),u?r.a.createElement("span",{className:"badge badge--danger"},"required",p&&"*"):r.a.createElement("span",{className:"badge badge--secondary"},"optional")),y,!v&&"table"!=g&&r.a.createElement(f,{defaultValue:l,enumValues:o,examples:c,groups:s,name:m,path:b,relevantWhen:p,required:u,unit:O,warnings:j}))}},905:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return m})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return d}));var n=a(1),r=a(9),l=(a(0),a(1128)),i=a(1155),o=a(1156),c=a(1161),s=a(1160),m={last_modified_on:"2020-06-10",component_title:"Logfmt Parser",description:"The Vector `logfmt_parser` transform accepts and outputs `log` events, allowing you to parse a log field's value in the logfmt format.",event_types:["log"],function_category:"parse",issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+logfmt_parser%22",operating_systems:["Linux","MacOS","Windows"],sidebar_label:'logfmt_parser|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/logfmt_parser.rs",status:"beta",title:"Logfmt Parser Transform",unsupported_operating_systems:[]},b={id:"reference/transforms/logfmt_parser",title:"Logfmt Parser Transform",description:"The Vector `logfmt_parser` transform accepts and outputs `log` events, allowing you to parse a log field's value in the logfmt format.",source:"@site/docs/reference/transforms/logfmt_parser.md",permalink:"/docs/reference/transforms/logfmt_parser",editUrl:"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/logfmt_parser.md",sidebar_label:'logfmt_parser|["log"]',sidebar:"docs",previous:{title:"Log to Metric Transform",permalink:"/docs/reference/transforms/log_to_metric"},next:{title:"Lua Transform",permalink:"/docs/reference/transforms/lua"}},p=[{value:"Configuration",id:"configuration",children:[{value:"drop_field",id:"drop_field",children:[]},{value:"field",id:"field",children:[]},{value:"types",id:"types",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Complex Processing",id:"complex-processing",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Field Notation Syntax",id:"field-notation-syntax",children:[]},{value:"Format Specification",id:"format-specification",children:[]},{value:"Key/Value Parsing",id:"keyvalue-parsing",children:[]},{value:"Quoting Values",id:"quoting-values",children:[]},{value:"Value Coercion",id:"value-coercion",children:[]}]}],u={rightToc:p};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"logfmt_parser")," transform\naccepts and outputs ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events, allowing you to parse\na log field's value in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://brandur.org/logfmt"}),"logfmt")," format."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)(c.a,{block:!0,defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"common",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.my_transform_id]\n  # General\n  type = "logfmt_parser" # required\n  inputs = ["my-source-or-transform-id"] # required\n  drop_field = true # optional, default\n  field = "message" # optional, default\n\n  # Types\n  types.status = "int" # example\n  types.duration = "float" # example\n  types.success = "bool" # example\n  types.timestamp = "timestamp|%F" # example\n  types.timestamp = "timestamp|%a %b %e %T %Y" # example\n  types.parent.child = "int" # example\n'))),Object(l.b)(s.a,{value:"advanced",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.my_transform_id]\n  # General\n  type = "logfmt_parser" # required\n  inputs = ["my-source-or-transform-id"] # required\n  drop_field = true # optional, default\n  field = "message" # optional, default\n\n  # Types\n  types.status = "int" # example\n  types.duration = "float" # example\n  types.success = "bool" # example\n  types.timestamp = "timestamp|%F" # example\n  types.timestamp = "timestamp|%a %b %e %T %Y" # example\n  types.parent.child = "int" # example\n')))),Object(l.b)(i.a,{filters:!0,mdxType:"Fields"},Object(l.b)(o.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:"drop_field",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"drop_field"},"drop_field"),Object(l.b)("p",null,"If the specified ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," should be dropped (removed) after parsing.")),Object(l.b)(o.a,{common:!0,defaultValue:"message",enumValues:null,examples:["message","parent.child","array[0]"],groups:[],name:"field",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"field"},"field"),Object(l.b)("p",null,"The log field to parse.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#field-notation-syntax"}),"Field Notation Syntax")," and ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#format-specification"}),"Format Specification")," for more info.")),Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[],name:"types",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"types"},"types"),Object(l.b)("p",null,"Key/value pairs representing mapped log field names and types. This is used to\ncoerce log fields into their proper types."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:{bool:'Coerces `"true"`/`/"false"`, `"1"`/`"0"`, and `"t"`/`"f"` values into boolean.',float:"Coerce to a 64 bit float.",int:"Coerce to a 64 bit integer.",string:"Coerce to a string.",timestamp:"Coerces to a Vector timestamp. [`strptime` specificiers][urls.strptime_specifiers] must be used to parse the string."},examples:[{status:"int"},{duration:"float"},{success:"bool"},{timestamp:"timestamp|%F"},{timestamp:"timestamp|%a %b %e %T %Y"},{parent:{child:"int"}}],groups:[],name:"`[field-name]`",path:"types",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"field-name"},Object(l.b)("inlineCode",{parentName:"h4"},"[field-name]")),Object(l.b)("p",null,"A definition of log field type conversions. They key is the log field name and\nthe value is the type. ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html#specifiers"}),Object(l.b)("inlineCode",{parentName:"a"},"strptime")," specifiers")," are\nsupported for the ",Object(l.b)("inlineCode",{parentName:"p"},"timestamp")," type."))))),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)(c.a,{block:!0,defaultValue:"heroku-router-log",select:!1,values:[{label:"Heroku Router Log",value:"heroku-router-log"},{label:"Loosely Structured",value:"loosely-structured"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"heroku-router-log",mdxType:"TabItem"},Object(l.b)("p",null,"Given the following Heroku router log line:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "message": "at=info method=GET path=/ host=myapp.herokuapp.com request_id=8601b555-6a83-4c12-8269-97c8e32cdb22 fwd="204.204.204.204" dyno=web.1 connect=1ms service=18ms status=200 bytes=13 tls_version=tls1.1 protocol=http"\n}\n')),Object(l.b)("p",null,"And the following configuration:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.<transform-id>]\ntype = "logfmt"\nfield = "message"\ndrop_field = true\n\ntypes.bytes = "int"\ntypes.status = "int"\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," event")," will be output with the following structure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  // ... existing fields\n  "at": "info",\n  "method": "GET",\n  "path": "/",\n  "host": "myapp.herokuapp.com",\n  "request_id": "8601b555-6a83-4c12-8269-97c8e32cdb22",\n  "fwd": "204.204.204.204",\n  "dyno": "web.1",\n  "connect": "1ms",\n  "service": "18ms",\n  "status": 200,\n  "bytes": 13,\n  "tls_version": "tls1.1",\n  "protocol": "http"\n}\n')),Object(l.b)("p",null,"A couple of things to note:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"bytes")," and ",Object(l.b)("inlineCode",{parentName:"li"},"status")," fields were coerced into ",Object(l.b)("inlineCode",{parentName:"li"},"int"),"s via the ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#types"}),Object(l.b)("inlineCode",{parentName:"a"},"types"))," options."),Object(l.b)("li",{parentName:"ol"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"message")," field was dropped due to setting ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#drop_field"}),Object(l.b)("inlineCode",{parentName:"a"},"drop_field"))," to ",Object(l.b)("inlineCode",{parentName:"li"},"true"),"."))),Object(l.b)(s.a,{value:"loosely-structured",mdxType:"TabItem"},Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"logfmt_parser")," will also parse loosely structured key/value pairs. For\nexample, given the following ",Object(l.b)("inlineCode",{parentName:"p"},"log")," event:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "message": "info | Sent 200 in 54.2ms duration=54.2ms status=200"\n}\n')),Object(l.b)("p",null,"And the following configuration:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.<transform-id>]\ntype = "logfmt"\nfield = "message"\ndrop_field = false # keep the field since it contains other data\n\ntypes.status = "int"\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," event")," will be output with the following structure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  // ... existing fields\n  "message": "info | Sent 200 in 54.2ms duration=54.2ms status=200",\n  "duration": "54.2ms",\n  "status": 200\n}\n')),Object(l.b)("p",null,"A couple of things to note:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"status")," field was coerced into an ",Object(l.b)("inlineCode",{parentName:"li"},"int")," via the ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#types"}),Object(l.b)("inlineCode",{parentName:"a"},"types"))," option."),Object(l.b)("li",{parentName:"ol"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"message")," field was ",Object(l.b)("em",{parentName:"li"},"kept")," due to setting ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#drop_field"}),Object(l.b)("inlineCode",{parentName:"a"},"drop_field"))," to ",Object(l.b)("inlineCode",{parentName:"li"},"false"),".")))),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"complex-processing"},"Complex Processing"),Object(l.b)("p",null,"If you encounter limitations with the ",Object(l.b)("inlineCode",{parentName:"p"},"logfmt_parser"),"\ntransform then we recommend using a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://vector.dev/components/?functions%5B%5D=program"}),"runtime transform"),".\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime."),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables")," section."),Object(l.b)("h3",{id:"field-notation-syntax"},"Field Notation Syntax"),Object(l.b)("p",null,"The ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," options\nsupport ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/field-path-notation/"}),"Vector's field notation syntax"),",\nenabling access to root-level, nested, and array field values. For example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.my_logfmt_parser_transform_id]\n  # ...\n  field = "message"\n  field = "parent.child"\n  field = "array[0]"\n  # ...\n')),Object(l.b)("p",null,"You can learn more about Vector's field notation in the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/field-path-notation/"}),"field notation reference"),"."),Object(l.b)("h3",{id:"format-specification"},"Format Specification"),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://brandur.org/logfmt"}),"Logfmt")," is, unfortunately, a very loosely defined format. There\nis no official specification for the format and Vector makes a best effort to\nparse key/value pairs delimited with a ",Object(l.b)("inlineCode",{parentName:"p"},"="),". It works by splitting the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field")),"'s\nvalue on non-quoted white-space and then splitting each token by a non-quoted\n",Object(l.b)("inlineCode",{parentName:"p"},"=")," character. This makes the parsing process somewhat flexible in that the\nstring does not need to be strictly formatted."),Object(l.b)("p",null,"For example, the following log line:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "message": "Hello world duration=2s user-agent=\\"Firefox/47.3 Mozilla/5.0\\""\n}\n')),Object(l.b)("p",null,"Will be successfully parsed into:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "message": "Hello world duration=2s user-agent=\\"Firefox/47.3 Mozilla/5.0\\"",\n  "duration": "2s",\n  "user-agent": "Firefox/47.3 Mozilla/5.0"\n}\n')),Object(l.b)("h3",{id:"keyvalue-parsing"},"Key/Value Parsing"),Object(l.b)("p",null,"This transform can be used for key/value parsing. ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://brandur.org/logfmt"}),"Logfmt")," refers\nto a ",Object(l.b)("em",{parentName:"p"},"loosely")," defined spec that parses a key/value pair delimited by a ",Object(l.b)("inlineCode",{parentName:"p"},"="),"\ncharacter. This section, and it's keywords, is primarily added to assist users\nin finding this transform for these terms."),Object(l.b)("h3",{id:"quoting-values"},"Quoting Values"),Object(l.b)("p",null,"Values can be quoted to capture spaces, and quotes can be escaped with ",Object(l.b)("inlineCode",{parentName:"p"},"\\"),".\nFor example"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),'key1="value with spaces" key2="value with spaces and \\""\n')),Object(l.b)("p",null,"Would result in the following ",Object(l.b)("inlineCode",{parentName:"p"},"log")," event:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "key1": "value with spaces",\n  "key2": "value with spaces and \\""\n}\n')),Object(l.b)("h3",{id:"value-coercion"},"Value Coercion"),Object(l.b)("p",null,"Values can be coerced upon extraction via the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#types"}),Object(l.b)("inlineCode",{parentName:"a"},"types.*"))," options. This functions\nexactly like the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/transforms/coercer/"}),Object(l.b)("inlineCode",{parentName:"a"},"coercer")," transform")," except that its\ncoupled within this transform for convenience."),Object(l.b)("h4",{id:"timestamps"},"Timestamps"),Object(l.b)("p",null,"You can coerce values into timestamps via the ",Object(l.b)("inlineCode",{parentName:"p"},"timestamp")," type:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'# ...\ntypes.first_timestamp = "timestamp" # best effort parsing\ntypes.second_timestamp = "timestamp|%Y-%m-%dT%H:%M:%S%z" # ISO8601\n# ...\n')),Object(l.b)("p",null,"As noted above, if you do not specify a specific ",Object(l.b)("inlineCode",{parentName:"p"},"strftime")," format, Vector\nwill make a best effort attempt to parse the timestamp against the following\ncommon formats:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Format"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("strong",{parentName:"td"},"Without Timezone")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%F %T")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"YYYY-MM-DD HH:MM:SS")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%v %T")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"DD-Mmm-YYYY HH:MM:SS")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"FT%T")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"ISO 8601 / RFC 3339 without TZ")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"m/%d/%Y:%T")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"US common date format")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"a, %d %b %Y %T")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"RFC 822/2822 without TZ")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"a %d %b %T %Y")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"date")," command output without TZ")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"A %d %B %T %Y")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"date")," command output without TZ, long names")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"a %b %e %T %Y")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"ctime format")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("strong",{parentName:"td"},"With Timezone")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%+")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"ISO 8601 / RFC 3339")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%a %d %b %T %Z %Y")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"date")," command output")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%a %d %b %T %z %Y")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"date")," command output, numeric TZ")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%a %d %b %T %#z %Y")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"date")," command output, numeric TZ")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("strong",{parentName:"td"},"UTC Formats")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%s")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"UNIX timestamp")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"%FT%TZ")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"ISO 8601 / RFC 3339 UTC")))))}d.isMDXComponent=!0}}]);