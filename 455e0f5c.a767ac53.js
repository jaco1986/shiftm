(window.webpackJsonp=window.webpackJsonp||[]).push([[269],{424:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var i=t(1),o=t(9),a=(t(0),t(1130)),r={last_modified_on:"2020-04-13",title:"New Honeycomb Sink",description:"Sink logs to the Honeycomb logging service",author_github:"https://github.com/binarylogic",pr_numbers:[1665],release:"0.9.0",hide_on_release_notes:!0,tags:["type: new feature","domain: sinks","sink: honeycomb"]},s={date:"2020-03-14T00:00:00.000Z",description:"Sink logs to the Honeycomb logging service",permalink:"/highlights/2020-03-14-honeycomb-sink",readingTime:"1 min read",source:"@site/highlights/2020-03-14-honeycomb-sink.md",tags:[{label:"type: new feature",permalink:"/highlights/tags/type-new-feature"},{label:"domain: sinks",permalink:"/highlights/tags/domain-sinks"},{label:"sink: honeycomb",permalink:"/highlights/tags/sink-honeycomb"}],title:"New Honeycomb Sink",truncated:!1,prevItem:{title:"New Apache Pulsar Sink",permalink:"/highlights/2020-03-19-apache-pulsar-sink"},nextItem:{title:"New Papertrail Sink",permalink:"/highlights/2020-03-12-papertrail-sink"}},c=[],h={rightToc:c};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},h,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"For you ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://honeycomb.io"}),"Honeycomb")," fans we have a new\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/reference/sinks/honeycomb/"}),Object(a.b)("inlineCode",{parentName:"a"},"honeycomb")," sink"),". Keep an eye on\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/timberio/vector/pull/1991"}),"PR#1991"),", which will introduce a new ",Object(a.b)("inlineCode",{parentName:"p"},"transaction"),' transform.\nThis tranformed is designed to produce "canoncial" events. These are flattened,\nwide events that represent an entire transaction, the concept that Honeycomb\nis built upon. Vector + Honeycomb = \ud83d\udc6f.'))}p.isMDXComponent=!0}}]);