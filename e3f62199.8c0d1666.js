(window.webpackJsonp=window.webpackJsonp||[]).push([[853],{1012:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return d})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return h}));var a=n(1),l=n(9),r=(n(0),n(1118)),i=n(1147),o=n(1148),s=n(1146),u=n.n(s),c=n(1153),m=n(1152),b={last_modified_on:"2020-05-25",delivery_guarantee:"at_least_once",component_title:"InfluxDB Logs",description:"The Vector `influxdb_logs` sink batches `log` events to InfluxDB using v1 or v2 HTTP API.",event_types:["log"],function_category:"transmit",issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22sink%3A+influxdb_logs%22",operating_systems:["Linux","MacOS","Windows"],sidebar_label:'influxdb_logs|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/sinks/influxdb/logs.rs",status:"beta",title:"InfluxDB Logs Sink",unsupported_operating_systems:[]},d={id:"reference/sinks/influxdb_logs",title:"InfluxDB Logs Sink",description:"The Vector `influxdb_logs` sink batches `log` events to InfluxDB using v1 or v2 HTTP API.",source:"@site/docs/reference/sinks/influxdb_logs.md",permalink:"/docs/reference/sinks/influxdb_logs",sidebar_label:'influxdb_logs|["log"]'},p=[{value:"Configuration",id:"configuration",children:[{value:"batch",id:"batch",children:[]},{value:"bucket",id:"bucket",children:[]},{value:"buffer",id:"buffer",children:[]},{value:"consistency",id:"consistency",children:[]},{value:"database",id:"database",children:[]},{value:"encoding",id:"encoding",children:[]},{value:"endpoint",id:"endpoint",children:[]},{value:"healthcheck",id:"healthcheck",children:[]},{value:"namespace",id:"namespace",children:[]},{value:"org",id:"org",children:[]},{value:"password",id:"password",children:[]},{value:"request",id:"request",children:[]},{value:"retention_policy_name",id:"retention_policy_name",children:[]},{value:"tags",id:"tags",children:[]},{value:"token",id:"token",children:[]},{value:"username",id:"username",children:[]}]},{value:"How It Works",id:"how-it-works",children:[{value:"Buffers &amp; Batches",id:"buffers--batches",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Health Checks",id:"health-checks",children:[]},{value:"Mapping Log Event into Line Protocol",id:"mapping-log-event-into-line-protocol",children:[]},{value:"Rate Limits",id:"rate-limits",children:[]},{value:"Retry Policy",id:"retry-policy",children:[]}]}],f={rightToc:p};function h(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},f,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Vector ",Object(r.b)("inlineCode",{parentName:"p"},"influxdb_logs")," sink\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#buffers--batches"}),"batches")," ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events to\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.influxdata.com/products/influxdb-overview/"}),"InfluxDB")," using ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.influxdata.com/influxdb/latest/tools/api/#write-http-endpoint"}),"v1")," or\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://v2.docs.influxdata.com/v2.0/api/#tag/Write"}),"v2")," HTTP API."),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)(c.a,{block:!0,defaultValue:"v1",values:[{label:"v1",value:"v1"},{label:"v1 (adv)",value:"v1-adv"},{label:"v2",value:"v2"},{label:"v2 (adv)",value:"v2-adv"}],mdxType:"Tabs"},Object(r.b)(m.a,{value:"v1",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[sinks.my_sink_id]\n  # General\n  type = "influxdb_logs" # required\n  inputs = ["my-source-or-transform-id"] # required\n  endpoint = "https://us-west-2-1.aws.cloud1.influxdata.com" # required\n  namespace = "service" # required\n  database = "vector-database" # required\n  healthcheck = true # optional, default\n\n  # Auth\n  password = "${INFLUXDB_PASSWORD}" # optional, no default\n  username = "todd" # optional, no default\n\n  # Persistence\n  consistency = "any" # optional, no default\n  retention_policy_name = "autogen" # optional, no default\n'))),Object(r.b)(m.a,{value:"v1-adv",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[sinks.my_sink_id]\n  # General\n  type = "influxdb_logs" # required\n  inputs = ["my-source-or-transform-id"] # required\n  endpoint = "https://us-west-2-1.aws.cloud1.influxdata.com" # required\n  namespace = "service" # required\n  database = "vector-database" # required\n  healthcheck = true # optional, default\n  tags = ["field1", "parent.child_field"] # optional, no default\n\n  # Auth\n  password = "${INFLUXDB_PASSWORD}" # optional, no default\n  username = "todd" # optional, no default\n\n  # Batch\n  batch.max_size = 10490000 # optional, default, bytes\n  batch.timeout_secs = 1 # optional, default, seconds\n\n  # Buffer\n  buffer.max_events = 500 # optional, default, events, relevant when type = "memory"\n  buffer.max_size = 104900000 # required, bytes, required when type = "disk"\n  buffer.type = "memory" # optional, default\n  buffer.when_full = "block" # optional, default\n\n  # Encoding\n  encoding.except_fields = ["timestamp", "message", "host"] # optional, no default\n  encoding.only_fields = ["timestamp", "message", "host"] # optional, no default\n  encoding.timestamp_format = "rfc3339" # optional, default\n\n  # Persistence\n  consistency = "any" # optional, no default\n  retention_policy_name = "autogen" # optional, no default\n\n  # Request\n  request.in_flight_limit = 5 # optional, default, requests\n  request.rate_limit_duration_secs = 1 # optional, default, seconds\n  request.rate_limit_num = 5 # optional, default\n  request.retry_attempts = -1 # optional, default\n  request.retry_initial_backoff_secs = 1 # optional, default, seconds\n  request.retry_max_duration_secs = 10 # optional, default, seconds\n  request.timeout_secs = 60 # optional, default, seconds\n'))),Object(r.b)(m.a,{value:"v2",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[sinks.my_sink_id]\n  # General\n  type = "influxdb_logs" # required\n  inputs = ["my-source-or-transform-id"] # required\n  endpoint = "https://us-west-2-1.aws.cloud2.influxdata.com" # required\n  namespace = "service" # required\n  bucket = "vector-bucket" # required\n  healthcheck = true # optional, default\n\n  # Auth\n  org = "my-org" # required\n  token = "${INFLUXDB_TOKEN}" # required\n'))),Object(r.b)(m.a,{value:"v2-adv",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[sinks.my_sink_id]\n  # General\n  type = "influxdb_logs" # required\n  inputs = ["my-source-or-transform-id"] # required\n  endpoint = "https://us-west-2-1.aws.cloud2.influxdata.com" # required\n  namespace = "service" # required\n  bucket = "vector-bucket" # required\n  healthcheck = true # optional, default\n  tags = ["field1", "parent.child_field"] # optional, no default\n\n  # Auth\n  org = "my-org" # required\n  token = "${INFLUXDB_TOKEN}" # required\n\n  # Batch\n  batch.max_size = 10490000 # optional, default, bytes\n  batch.timeout_secs = 1 # optional, default, seconds\n\n  # Buffer\n  buffer.max_events = 500 # optional, default, events, relevant when type = "memory"\n  buffer.max_size = 104900000 # required, bytes, required when type = "disk"\n  buffer.type = "memory" # optional, default\n  buffer.when_full = "block" # optional, default\n\n  # Encoding\n  encoding.except_fields = ["timestamp", "message", "host"] # optional, no default\n  encoding.only_fields = ["timestamp", "message", "host"] # optional, no default\n  encoding.timestamp_format = "rfc3339" # optional, default\n\n  # Request\n  request.in_flight_limit = 5 # optional, default, requests\n  request.rate_limit_duration_secs = 1 # optional, default, seconds\n  request.rate_limit_num = 5 # optional, default\n  request.retry_attempts = -1 # optional, default\n  request.retry_initial_backoff_secs = 1 # optional, default, seconds\n  request.retry_max_duration_secs = 10 # optional, default, seconds\n  request.timeout_secs = 60 # optional, default, seconds\n')))),Object(r.b)(i.a,{filters:!0,mdxType:"Fields"},Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:["v1","v2"],name:"batch",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"batch"},"batch"),Object(r.b)("p",null,"Configures the sink batching behavior."),Object(r.b)(i.a,{filters:!1,mdxType:"Fields"},Object(r.b)(o.a,{common:!0,defaultValue:1049e4,enumValues:null,examples:[1049e4],groups:["v1","v2"],name:"max_size",path:"batch",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"bytes",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"max_size"},"max_size"),Object(r.b)("p",null,"The maximum size of a batch, in bytes, before it is flushed.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")),Object(r.b)(o.a,{common:!0,defaultValue:1,enumValues:null,examples:[1],groups:["v1","v2"],name:"timeout_secs",path:"batch",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"timeout_secs"},"timeout_secs"),Object(r.b)("p",null,"The maximum age of a batch before it is flushed.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")))),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["vector-bucket","4d2225e4d3d49f75"],groups:["v2"],name:"bucket",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"bucket"},"bucket"),Object(r.b)("p",null,"The destination bucket for writes into InfluxDB 2.")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:["v1","v2"],name:"buffer",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"buffer"},"buffer"),Object(r.b)("p",null,"Configures the sink specific buffer behavior."),Object(r.b)(i.a,{filters:!1,mdxType:"Fields"},Object(r.b)(o.a,{common:!0,defaultValue:500,enumValues:null,examples:[500],groups:["v1","v2"],name:"max_events",path:"buffer",relevantWhen:{type:"memory"},required:!1,templateable:!1,type:"uint",unit:"events",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"max_events"},"max_events"),Object(r.b)("p",null,"The maximum number of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/"}),"events")," allowed in the buffer.")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[1049e5],groups:["v1","v2"],name:"max_size",path:"buffer",relevantWhen:{type:"disk"},required:!0,templateable:!1,type:"uint",unit:"bytes",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"max_size-1"},"max_size"),Object(r.b)("p",null,"The maximum size of the buffer on the disk.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")),Object(r.b)(o.a,{common:!0,defaultValue:"memory",enumValues:{memory:"Stores the sink's buffer in memory. This is more performant, but less durable. Data will be lost if Vector is restarted forcefully.",disk:"Stores the sink's buffer on disk. This is less performant, but durable. Data will not be lost between restarts."},examples:["memory","disk"],groups:["v1","v2"],name:"type",path:"buffer",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"type"},"type"),Object(r.b)("p",null,"The buffer's type and storage mechanism.")),Object(r.b)(o.a,{common:!1,defaultValue:"block",enumValues:{block:"Applies back pressure when the buffer is full. This prevents data loss, but will cause data to pile up on the edge.",drop_newest:"Drops new data as it's received. This data is lost. This should be used when performance is the highest priority."},examples:["block","drop_newest"],groups:["v1","v2"],name:"when_full",path:"buffer",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"when_full"},"when_full"),Object(r.b)("p",null,"The behavior when the buffer becomes full.")))),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["any","one","quorum","all"],groups:["v1"],name:"consistency",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"consistency"},"consistency"),Object(r.b)("p",null,"Sets the write consistency for the point for InfluxDB 1.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["vector-database","iot-store"],groups:["v1"],name:"database",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"database"},"database"),Object(r.b)("p",null,"Sets the target database for the write into InfluxDB 1.")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:["v1","v2"],name:"encoding",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"encoding"},"encoding"),Object(r.b)("p",null,"Configures the encoding specific sink behavior."),Object(r.b)(i.a,{filters:!1,mdxType:"Fields"},Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[["timestamp","message","host"]],groups:["v1","v2"],name:"except_fields",path:"encoding",relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"except_fields"},"except_fields"),Object(r.b)("p",null,"Prevent the sink from encoding the specified labels.")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[["timestamp","message","host"]],groups:["v1","v2"],name:"only_fields",path:"encoding",relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"only_fields"},"only_fields"),Object(r.b)("p",null,"Limit the sink to only encoding the specified labels.")),Object(r.b)(o.a,{common:!1,defaultValue:"rfc3339",enumValues:{rfc3339:"Format as an RFC3339 string",unix:"Format as a unix timestamp, can be parsed as a Clickhouse DateTime"},examples:["rfc3339","unix"],groups:["v1","v2"],name:"timestamp_format",path:"encoding",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"timestamp_format"},"timestamp_format"),Object(r.b)("p",null,"How to format event timestamps.")))),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["http://localhost:8086/","https://us-west-2-1.aws.cloud1.influxdata.com","https://us-west-2-1.aws.cloud2.influxdata.com"],groups:["v1","v2"],name:"endpoint",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"endpoint"},"endpoint"),Object(r.b)("p",null,"InfluxDB endpoint to send metrics to.")),Object(r.b)(o.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:["v1","v2"],name:"healthcheck",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"healthcheck"},"healthcheck"),Object(r.b)("p",null,"Enables/disables the sink healthcheck upon start.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#health-checks"}),"Health Checks")," for more info.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["service"],groups:["v1","v2"],name:"namespace",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"namespace"},"namespace"),Object(r.b)("p",null,"A prefix that will be added to all metric names.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["my-org","33f2cff0a28e5b63"],groups:["v2"],name:"org",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"org"},"org"),Object(r.b)("p",null,"Specifies the destination organization for writes into InfluxDB 2.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["${INFLUXDB_PASSWORD}","influxdb4ever"],groups:["v1"],name:"password",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"password"},"password"),Object(r.b)("p",null,"Sets the password for authentication if you\u2019ve enabled authentication for the\nwrite into InfluxDB 1.")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:["v1","v2"],name:"request",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"request"},"request"),Object(r.b)("p",null,"Configures the sink request behavior."),Object(r.b)(i.a,{filters:!1,mdxType:"Fields"},Object(r.b)(o.a,{common:!0,defaultValue:5,enumValues:null,examples:[5],groups:["v1","v2"],name:"in_flight_limit",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"requests",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"in_flight_limit"},"in_flight_limit"),Object(r.b)("p",null,"The maximum number of in-flight requests allowed at any given time.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#rate-limits"}),"Rate Limits")," for more info.")),Object(r.b)(o.a,{common:!0,defaultValue:1,enumValues:null,examples:[1],groups:["v1","v2"],name:"rate_limit_duration_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"rate_limit_duration_secs"},"rate_limit_duration_secs"),Object(r.b)("p",null,"The time window, in seconds, used for the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#rate_limit_num"}),Object(r.b)("inlineCode",{parentName:"a"},"rate_limit_num"))," option.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#rate-limits"}),"Rate Limits")," for more info.")),Object(r.b)(o.a,{common:!0,defaultValue:5,enumValues:null,examples:[5],groups:["v1","v2"],name:"rate_limit_num",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"rate_limit_num"},"rate_limit_num"),Object(r.b)("p",null,"The maximum number of requests allowed within the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#rate_limit_duration_secs"}),Object(r.b)("inlineCode",{parentName:"a"},"rate_limit_duration_secs")),"\ntime window.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#rate-limits"}),"Rate Limits")," for more info.")),Object(r.b)(o.a,{common:!1,defaultValue:-1,enumValues:null,examples:[-1],groups:["v1","v2"],name:"retry_attempts",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"retry_attempts"},"retry_attempts"),Object(r.b)("p",null,"The maximum number of retries to make for failed requests. The default, for all\nintents and purposes, represents an infinite number of retries.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#retry-policy"}),"Retry Policy")," for more info.")),Object(r.b)(o.a,{common:!1,defaultValue:1,enumValues:null,examples:[1],groups:["v1","v2"],name:"retry_initial_backoff_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"retry_initial_backoff_secs"},"retry_initial_backoff_secs"),Object(r.b)("p",null,"The amount of time to wait before attempting the first retry for a failed\nrequest. Once, the first retry has failed the fibonacci sequence will be used\nto select future backoffs.")),Object(r.b)(o.a,{common:!1,defaultValue:10,enumValues:null,examples:[10],groups:["v1","v2"],name:"retry_max_duration_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"retry_max_duration_secs"},"retry_max_duration_secs"),Object(r.b)("p",null,"The maximum amount of time, in seconds, to wait between retries.")),Object(r.b)(o.a,{common:!0,defaultValue:60,enumValues:null,examples:[60],groups:["v1","v2"],name:"timeout_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(r.b)("h4",{id:"timeout_secs-1"},"timeout_secs"),Object(r.b)("p",null,"The maximum time a request can take before being aborted. It is highly\nrecommended that you do not lower value below the service's internal timeout,\nas this could create orphaned requests, pile on retries, and result in\nduplicate data downstream.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")))),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["autogen","one_day_only"],groups:["v1"],name:"retention_policy_name",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"retention_policy_name"},"retention_policy_name"),Object(r.b)("p",null,"Sets the target retention policy for the write into InfluxDB 1.")),Object(r.b)(o.a,{common:!1,defaultValue:null,enumValues:null,examples:[["field1","parent.child_field"]],groups:["v1","v2"],name:"tags",path:null,relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"tags"},"tags"),Object(r.b)("p",null,"A set of additional fields that will be attached to each LineProtocol as a tag.\nNote: If the set of tag values has high cardinality this also increase\ncardinality in InfluxDB.\nSee ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#mapping-log-event-into-line-protocol"}),"Mapping Log Event into Line Protocol")," for more info.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["${INFLUXDB_TOKEN}","ef8d5de700e7989468166c40fc8a0ccd"],groups:["v2"],name:"token",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"token"},"token"),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://v2.docs.influxdata.com/v2.0/security/tokens/"}),"Authentication token")," for InfluxDB 2.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["todd","vector-source"],groups:["v1"],name:"username",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(r.b)("h3",{id:"username"},"username"),Object(r.b)("p",null,"Sets the username for authentication if you\u2019ve enabled authentication for the\nwrite into InfluxDB 1."))),Object(r.b)("h2",{id:"how-it-works"},"How It Works"),Object(r.b)("h3",{id:"buffers--batches"},"Buffers & Batches"),Object(r.b)(u.a,{src:"/img/buffers-and-batches-serial.svg",mdxType:"SVG"}),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"influxdb_logs")," sink buffers & batches data as\nshown in the diagram above. You'll notice that Vector treats these concepts\ndifferently, instead of treating them as global concepts, Vector treats them\nas sink specific concepts. This isolates sinks, ensuring services disruptions\nare contained and ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/guarantees/"}),"delivery guarantees")," are honored."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Batches")," are flushed when 1 of 2 conditions are met:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"The batch age meets or exceeds the configured ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#timeout_secs"}),Object(r.b)("inlineCode",{parentName:"a"},"timeout_secs")),"."),Object(r.b)("li",{parentName:"ol"},"The batch size meets or exceeds the configured ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#max_size"}),Object(r.b)("inlineCode",{parentName:"a"},"max_size")),".")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Buffers")," are controlled via the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#buffer"}),Object(r.b)("inlineCode",{parentName:"a"},"buffer.*"))," options."),Object(r.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(r.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(r.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(r.b)("p",null,"You can learn more in the\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables")," section."),Object(r.b)("h3",{id:"health-checks"},"Health Checks"),Object(r.b)("p",null,"Health checks ensure that the downstream service is accessible and ready to\naccept data. This check is performed upon sink initialization.\nIf the health check fails an error will be logged and Vector will proceed to\nstart."),Object(r.b)("h4",{id:"require-health-checks"},"Require Health Checks"),Object(r.b)("p",null,"If you'd like to exit immediately upon a health check failure, you can\npass the ",Object(r.b)("inlineCode",{parentName:"p"},"--require-healthy")," flag:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"vector --config /etc/vector/vector.toml --require-healthy\n")),Object(r.b)("h4",{id:"disable-health-checks"},"Disable Health Checks"),Object(r.b)("p",null,"If you'd like to disable health checks for this sink you can set the\n",Object(r.b)("inlineCode",{parentName:"p"},"healthcheck")," option to ",Object(r.b)("inlineCode",{parentName:"p"},"false"),"."),Object(r.b)("h3",{id:"mapping-log-event-into-line-protocol"},"Mapping Log Event into Line Protocol"),Object(r.b)("p",null,"InfluxDB uses ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://v2.docs.influxdata.com/v2.0/reference/syntax/line-protocol/"}),"line protocol")," to write data points. It is a text-based format that provides the measurement, tag set, field set, and timestamp of a data point."),Object(r.b)("p",null,"A ",Object(r.b)("inlineCode",{parentName:"p"},"Log Event")," event contains an arbitrary set of fields (key/value pairs) that describe the event."),Object(r.b)("p",null,"The following matrix outlines how Log Event fields are mapped into InfluxDB Line Protocol:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Line Protocol"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"host"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"tag")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"message"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"field")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"source_type"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"tag")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"timestamp"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"timestamp")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"[custom-key]"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"field")))),Object(r.b)("p",null,"The default behaviour could be overridden by a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#tags"}),Object(r.b)("inlineCode",{parentName:"a"},"tags"))," configuration."),Object(r.b)("h4",{id:"mapping-example"},"Mapping example"),Object(r.b)("p",null,"The following example shows how is ",Object(r.b)("inlineCode",{parentName:"p"},"Log Event")," mapped into ",Object(r.b)("inlineCode",{parentName:"p"},"Line Protocol"),":"),Object(r.b)("h5",{id:"log-event"},"Log Event"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "host": "my.host.com",\n  "message": "<13>Feb 13 20:07:26 74794bfb6795 root[8539]: i am foobar",\n  "timestamp": "2019-11-01T21:15:47+00:00",\n  "custom_field": "custom_value"\n}\n')),Object(r.b)("h5",{id:"line-protocol"},"Line Protocol"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-influxdb_line_protocol"}),'ns.vector,host=my.host.com,metric_type=logs custom_field="custom_value",message="<13>Feb 13 20:07:26 74794bfb6795 root[8539]: i am foobar" 1572642947000000000\n')),Object(r.b)("h3",{id:"rate-limits"},"Rate Limits"),Object(r.b)("p",null,"Vector offers a few levers to control the rate and volume of requests to the\ndownstream service. Start with the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#rate_limit_duration_secs"}),Object(r.b)("inlineCode",{parentName:"a"},"rate_limit_duration_secs"))," and\n",Object(r.b)("inlineCode",{parentName:"p"},"rate_limit_num")," options to ensure Vector does not exceed the specified\nnumber of requests in the specified window. You can further control the pace at\nwhich this window is saturated with the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#in_flight_limit"}),Object(r.b)("inlineCode",{parentName:"a"},"in_flight_limit"))," option, which\nwill guarantee no more than the specified number of requests are in-flight at\nany given time."),Object(r.b)("p",null,"Please note, Vector's defaults are carefully chosen and it should be rare that\nyou need to adjust these. If you found a good reason to do so please share it\nwith the Vector team by ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/timberio/vector/issues/new?labels=sink%3A+influxdb_logs"}),"opening an issue"),"."),Object(r.b)("h3",{id:"retry-policy"},"Retry Policy"),Object(r.b)("p",null,"Vector will retry failed requests (status == ",Object(r.b)("inlineCode",{parentName:"p"},"429"),", >= ",Object(r.b)("inlineCode",{parentName:"p"},"500"),", and != ",Object(r.b)("inlineCode",{parentName:"p"},"501"),").\nOther responses will ",Object(r.b)("em",{parentName:"p"},"not")," be retried. You can control the number of retry\nattempts and backoff rate with the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#retry_attempts"}),Object(r.b)("inlineCode",{parentName:"a"},"retry_attempts"))," and\n",Object(r.b)("inlineCode",{parentName:"p"},"retry_backoff_secs")," options."))}h.isMDXComponent=!0},1129:function(e,t,n){"use strict";var a=n(24),l=n(13),r=n(27),i=n(84),o=n(85),s=n(26),u=n(1135),c=n(86);l(l.S+l.F*!n(81)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,l,m,b=r(e),d="function"==typeof this?this:Array,p=arguments.length,f=p>1?arguments[1]:void 0,h=void 0!==f,v=0,g=c(b);if(h&&(f=a(f,p>2?arguments[2]:void 0,2)),null==g||d==Array&&o(g))for(n=new d(t=s(b.length));t>v;v++)u(n,v,h?f(b[v],v):b[v]);else for(m=g.call(b),n=new d;!(l=m.next()).done;v++)u(n,v,h?i(m,f,[l.value,v],!0):l.value);return n.length=v,n}})},1130:function(e,t,n){"use strict";var a=n(1136),l=n(1131);e.exports=n(1137)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return a.def(l(this,"Set"),e=0===e?0:e,e)}},a)},1131:function(e,t,n){var a=n(12);e.exports=function(e,t){if(!a(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},1132:function(e,t,n){"use strict";var a=n(0),l=n.n(a),r=n(1127),i=n(1126),o=n.n(i);n(131);t.a=function(e){var t=e.className,n=e.size,a=e.style,i=e.text;return l.a.createElement(r.a,{to:"/vic/",className:o()("vic","vic--"+n,t)},l.a.createElement("div",{className:"icon"},l.a.createElement("img",{src:"/img/vicmojis/vic"+a+".svg",alt:"Vic - The Vector Mascot"})),i&&l.a.createElement("div",{className:"text"},i))}},1134:function(e,t,n){"use strict";var a=n(0),l=n.n(a),r=(n(1127),n(1132));t.a=function(e){var t=e.text;return l.a.createElement("section",{className:"empty"},l.a.createElement(r.a,{style:"no",text:t}))}},1135:function(e,t,n){"use strict";var a=n(28),l=n(53);e.exports=function(e,t,n){t in e?a.f(e,t,l(0,n)):e[t]=n}},1136:function(e,t,n){"use strict";var a=n(28).f,l=n(82),r=n(80),i=n(24),o=n(78),s=n(79),u=n(54),c=n(83),m=n(87),b=n(10),d=n(1133).fastKey,p=n(1131),f=b?"_s":"size",h=function(e,t){var n,a=d(t);if("F"!==a)return e._i[a];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,u){var c=e((function(e,a){o(e,c,t,"_i"),e._t=t,e._i=l(null),e._f=void 0,e._l=void 0,e[f]=0,null!=a&&s(a,n,e[u],e)}));return r(c.prototype,{clear:function(){for(var e=p(this,t),n=e._i,a=e._f;a;a=a.n)a.r=!0,a.p&&(a.p=a.p.n=void 0),delete n[a.i];e._f=e._l=void 0,e[f]=0},delete:function(e){var n=p(this,t),a=h(n,e);if(a){var l=a.n,r=a.p;delete n._i[a.i],a.r=!0,r&&(r.n=l),l&&(l.p=r),n._f==a&&(n._f=l),n._l==a&&(n._l=r),n[f]--}return!!a},forEach:function(e){p(this,t);for(var n,a=i(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(a(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!h(p(this,t),e)}}),b&&a(c.prototype,"size",{get:function(){return p(this,t)[f]}}),c},def:function(e,t,n){var a,l,r=h(e,t);return r?r.v=n:(e._l=r={i:l=d(t,!0),k:t,v:n,p:a=e._l,n:void 0,r:!1},e._f||(e._f=r),a&&(a.n=r),e[f]++,"F"!==l&&(e._i[l]=r)),e},getEntry:h,setStrong:function(e,t,n){u(e,t,(function(e,n){this._t=p(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?c(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,c(1))}),n?"entries":"values",!n,!0),m(t)}}},1137:function(e,t,n){"use strict";var a=n(5),l=n(13),r=n(15),i=n(80),o=n(1133),s=n(79),u=n(78),c=n(12),m=n(14),b=n(81),d=n(40),p=n(1138);e.exports=function(e,t,n,f,h,v){var g=a[e],O=g,j=h?"set":"add",y=O&&O.prototype,_={},x=function(e){var t=y[e];r(y,e,"delete"==e||"has"==e?function(e){return!(v&&!c(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!c(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof O&&(v||y.forEach&&!m((function(){(new O).entries().next()})))){var w=new O,k=w[j](v?{}:-0,1)!=w,N=m((function(){w.has(1)})),q=b((function(e){new O(e)})),T=!v&&m((function(){for(var e=new O,t=5;t--;)e[j](t,t);return!e.has(-0)}));q||((O=t((function(t,n){u(t,O,e);var a=p(new g,t,O);return null!=n&&s(n,h,a[j],a),a}))).prototype=y,y.constructor=O),(N||T)&&(x("delete"),x("has"),h&&x("get")),(T||k)&&x(j),v&&y.clear&&delete y.clear}else O=f.getConstructor(t,e,h,j),i(O.prototype,n),o.NEED=!0;return d(O,e),_[e]=O,l(l.G+l.W+l.F*(O!=g),_),v||f.setStrong(O,e,h),O}},1138:function(e,t,n){var a=n(12),l=n(1139).set;e.exports=function(e,t,n){var r,i=t.constructor;return i!==n&&"function"==typeof i&&(r=i.prototype)!==n.prototype&&a(r)&&l&&l(e,r),e}},1139:function(e,t,n){var a=n(12),l=n(8),r=function(e,t){if(l(e),!a(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,a){try{(a=n(24)(Function.call,n(1156).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(l){t=!0}return function(e,n){return r(e,n),t?e.__proto__=n:a(e,n),e}}({},!1):void 0),check:r}},1140:function(e,t,n){"use strict";n(1130),n(77),n(1129),n(25),n(20),n(19),n(1128);var a=n(0),l=n.n(a),r=n(1149),i=n.n(r);t.a=function(e){var t=e.currentState,n=e.humanize,a=e.icon,r=e.name,o=e.setState,s=e.values;if(0==s.size)return null;var u=Array.from(s);return l.a.createElement(l.a.Fragment,null,u.map((function(e,s){var u="string"==typeof e&&n?i()(e):e;return l.a.createElement("label",{key:s},l.a.createElement("input",{checked:t.has(e),name:r,onChange:function(n){var a=new Set(t);n.currentTarget.checked?a.add(e):a.delete(e),o(a)},type:"checkbox"}),u&&l.a.createElement(l.a.Fragment,null,a?l.a.createElement("i",{className:"feather icon-"+a}):""," ",u))})))}},1143:function(e,t,n){"use strict";var a=n(13),l=n(1144),r=n(27),i=n(26),o=n(29),s=n(1159);a(a.P,"Array",{flatMap:function(e){var t,n,a=r(this);return o(e),t=i(a.length),n=s(a,0),l(n,a,a,t,0,1,e,arguments[1]),n}}),n(88)("flatMap")},1144:function(e,t,n){"use strict";var a=n(1158),l=n(12),r=n(26),i=n(24),o=n(2)("isConcatSpreadable");e.exports=function e(t,n,s,u,c,m,b,d){for(var p,f,h=c,v=0,g=!!b&&i(b,d,3);v<u;){if(v in s){if(p=g?g(s[v],v,n):s[v],f=!1,l(p)&&(f=void 0!==(f=p[o])?!!f:a(p)),f&&m>0)h=e(t,n,p,r(p.length),h,m-1)-1;else{if(h>=9007199254740991)throw TypeError();t[h]=p}h++}v++}return h}},1147:function(e,t,n){"use strict";n(1128),n(1141),n(1142),n(1129),n(1143),n(25),n(20),n(19),n(77),n(1130);var a=n(0),l=n.n(a),r=n(1140),i=n(1134),o=n(1151),s=n.n(o);t.a=function(e){var t=e.children,n=e.filters,o=Object(a.useState)(!1),u=o[0],c=o[1],m=Object(a.useState)(new Set),b=m[0],d=m[1],p=Object(a.useState)(!1),f=p[0],h=p[1],v=Object(a.useState)(null),g=v[0],O=v[1],j=[];t&&(j=Array.isArray(t)?t:[t]);var y=j.some((function(e){return e.props.common})),_=s()(j).flatMap((function(e){return e.props.groups})).uniq().value(),x=j.some((function(e){return e.props.required})),w=j;return u&&(w=w.filter((function(e){return e.props.common}))),b.size>0&&(w=w.filter((function(e){return Array.from(b).every((function(t){return e.props.groups.includes(t)}))}))),f&&(w=w.filter((function(e){return e.props.required}))),g&&(w=w.filter((function(e){return e.props.name.toLowerCase().includes(g.toLowerCase())}))),l.a.createElement(l.a.Fragment,null,j.length>1&&!1!==n?l.a.createElement("div",{className:"filters"},l.a.createElement("div",{className:"search"},l.a.createElement("span",{className:"search--result-count"},w.length," items"),l.a.createElement("input",{className:"input--text input--lg",type:"text",onChange:function(e){return O(e.currentTarget.value)},placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"filter"},l.a.createElement("div",{className:"filter--choices"},l.a.createElement(r.a,{values:_,currentState:b,setState:d}),y&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:function(e){return c(e.currentTarget.checked)},checked:u}),"common"),x&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:function(e){return h(e.currentTarget.checked)},checked:f}),"required")))):null,!Array.isArray(w)||w.length>0?l.a.createElement("ul",{className:"connected-list"},w):l.a.createElement(i.a,{text:"no components found"}))}},1148:function(e,t,n){"use strict";n(89),n(25),n(20),n(19),n(52),n(1128),n(1141),n(1142);var a=n(0),l=n.n(a),r=n(1126),i=n.n(r),o=(n(1118),n(1160));function s(e){return e.includes(".")?'"'+e+'"':e}function u(e){return"string"==typeof e&&e.includes("\n")?'"""\n'+e+'\n"""':JSON.stringify(e)}function c(e,t){return(n=t)&&n.constructor===Object?"name"in t&&"value"in t?s(t.name)+" = "+u(t.value):s(Object.keys(t)[0])+" = "+u(Object.values(t)[0]):e?s(e)+" = "+u(t):u(t);var n}function m(e){var t=e.values,n=[];if(Array.isArray(t))for(var a in t){var r=t[a];n.push(l.a.createElement("code",{key:r},u(r))),n.push(" ")}else for(var i in t)n.push(l.a.createElement("code",{key:i,className:"with-info-icon",title:t[i]},u(i))),n.push(" ");return n}function b(e){var t=e.name,n=e.path,a=e.values,r="";return a.forEach((function(e){n&&(r+=n+"."),r+=c(t,e)+"\n"})),l.a.createElement("div",null,l.a.createElement(o.a,{className:"language-toml"},r))}function d(e){var t=e.unit,n=e.value,a="";return t&&(a=l.a.createElement(l.a.Fragment,null," (",t,")")),l.a.createElement(l.a.Fragment,null,l.a.createElement("code",null,u(n)),a)}function p(e){var t=e.value,n=Object.keys(t)[0],a=Object.values(t)[0];return""==a&&(a=null),l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:"#"+n},n))," ","= ",l.a.createElement("code",null,u(a)))}function f(e){var t=e.defaultValue,n=e.enumValues,r=e.examples,i=(e.groups,e.name),o=e.path,s=e.relevantWhen,u=e.required,c=e.unit,f=e.warnings,h=Object(a.useState)(!1),v=h[0],g=h[1];return l.a.createElement("ul",{className:"info"},f&&f.length>0&&f.map((function(e,t){return l.a.createElement("li",{key:t,className:"warning"},l.a.createElement("i",{className:"feather icon-alert-triangle"})," WARNING:"," ",e.text)})),s&&l.a.createElement("li",null,"Only ",u?"required":"relevant"," when:"," ",l.a.createElement(p,{value:s})),void 0!==t?null!==t?l.a.createElement("li",null,"Default: ",l.a.createElement(d,{unit:c,value:t})):l.a.createElement("li",null,"No default"):null,n&&l.a.createElement("li",null,"Enum, must be one of: ",l.a.createElement(m,{values:n})),(r.length>1||r[0]!=t)&&l.a.createElement("li",null,l.a.createElement("div",{className:"show-more",onClick:function(){return g(!v)}},v?"Hide examples":"View examples"),v&&l.a.createElement(b,{name:i,path:o,values:r})))}t.a=function(e){var t=e.children,n=e.common,r=e.defaultValue,o=e.enumValues,s=e.examples,u=e.groups,c=e.name,m=e.path,b=e.relevantWhen,d=e.required,p=e.templateable,h=e.type,v=e.unit,g=e.warnings,O=Object(a.useState)(!1),j=O[0],y=(O[1],t);return j&&(y=y.filter((function(e){return"p"!=e.props.originalType}))),l.a.createElement("li",{className:i()({"field-required":d,"field-collapsed":j}),required:d},l.a.createElement("div",{className:"badges"},p&&l.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),h&&l.a.createElement("span",{className:"badge badge--secondary"},h,v&&l.a.createElement(l.a.Fragment,null," (",v,")")),o&&Object.keys(o).length>0&&l.a.createElement("span",{className:"badge badge--secondary with-info-icon",title:"This option is an enumation and only allows specific values"},"enum"),n&&l.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This is a popular that we recommend for getting started"},"common"),d?l.a.createElement("span",{className:"badge badge--danger"},"required",b&&"*"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),y,!j&&"table"!=h&&l.a.createElement(f,{defaultValue:r,enumValues:o,examples:s,groups:u,name:c,path:m,relevantWhen:b,required:d,unit:v,warnings:g}))}}}]);