(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{1129:function(e,t,a){"use strict";var n=a(24),l=a(13),i=a(27),r=a(84),o=a(85),s=a(26),c=a(1135),u=a(86);l(l.S+l.F*!a(81)((function(e){Array.from(e)})),"Array",{from:function(e){var t,a,l,m,p=i(e),b="function"==typeof this?this:Array,d=arguments.length,h=d>1?arguments[1]:void 0,f=void 0!==h,g=0,j=u(p);if(f&&(h=n(h,d>2?arguments[2]:void 0,2)),null==j||b==Array&&o(j))for(a=new b(t=s(p.length));t>g;g++)c(a,g,f?h(p[g],g):p[g]);else for(m=j.call(p),a=new b;!(l=m.next()).done;g++)c(a,g,f?r(m,h,[l.value,g],!0):l.value);return a.length=g,a}})},1130:function(e,t,a){"use strict";var n=a(1136),l=a(1131);e.exports=a(1137)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return n.def(l(this,"Set"),e=0===e?0:e,e)}},n)},1131:function(e,t,a){var n=a(12);e.exports=function(e,t){if(!n(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},1132:function(e,t,a){"use strict";var n=a(0),l=a.n(n),i=a(1127),r=a(1126),o=a.n(r);a(131);t.a=function(e){var t=e.className,a=e.size,n=e.style,r=e.text;return l.a.createElement(i.a,{to:"/vic/",className:o()("vic","vic--"+a,t)},l.a.createElement("div",{className:"icon"},l.a.createElement("img",{src:"/img/vicmojis/vic"+n+".svg",alt:"Vic - The Vector Mascot"})),r&&l.a.createElement("div",{className:"text"},r))}},1134:function(e,t,a){"use strict";var n=a(0),l=a.n(n),i=(a(1127),a(1132));t.a=function(e){var t=e.text;return l.a.createElement("section",{className:"empty"},l.a.createElement(i.a,{style:"no",text:t}))}},1135:function(e,t,a){"use strict";var n=a(28),l=a(53);e.exports=function(e,t,a){t in e?n.f(e,t,l(0,a)):e[t]=a}},1136:function(e,t,a){"use strict";var n=a(28).f,l=a(82),i=a(80),r=a(24),o=a(78),s=a(79),c=a(54),u=a(83),m=a(87),p=a(10),b=a(1133).fastKey,d=a(1131),h=p?"_s":"size",f=function(e,t){var a,n=b(t);if("F"!==n)return e._i[n];for(a=e._f;a;a=a.n)if(a.k==t)return a};e.exports={getConstructor:function(e,t,a,c){var u=e((function(e,n){o(e,u,t,"_i"),e._t=t,e._i=l(null),e._f=void 0,e._l=void 0,e[h]=0,null!=n&&s(n,a,e[c],e)}));return i(u.prototype,{clear:function(){for(var e=d(this,t),a=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete a[n.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var a=d(this,t),n=f(a,e);if(n){var l=n.n,i=n.p;delete a._i[n.i],n.r=!0,i&&(i.n=l),l&&(l.p=i),a._f==n&&(a._f=l),a._l==n&&(a._l=i),a[h]--}return!!n},forEach:function(e){d(this,t);for(var a,n=r(e,arguments.length>1?arguments[1]:void 0,3);a=a?a.n:this._f;)for(n(a.v,a.k,this);a&&a.r;)a=a.p},has:function(e){return!!f(d(this,t),e)}}),p&&n(u.prototype,"size",{get:function(){return d(this,t)[h]}}),u},def:function(e,t,a){var n,l,i=f(e,t);return i?i.v=a:(e._l=i={i:l=b(t,!0),k:t,v:a,p:n=e._l,n:void 0,r:!1},e._f||(e._f=i),n&&(n.n=i),e[h]++,"F"!==l&&(e._i[l]=i)),e},getEntry:f,setStrong:function(e,t,a){c(e,t,(function(e,a){this._t=d(e,t),this._k=a,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?u(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,u(1))}),a?"entries":"values",!a,!0),m(t)}}},1137:function(e,t,a){"use strict";var n=a(5),l=a(13),i=a(15),r=a(80),o=a(1133),s=a(79),c=a(78),u=a(12),m=a(14),p=a(81),b=a(40),d=a(1138);e.exports=function(e,t,a,h,f,g){var j=n[e],O=j,y=f?"set":"add",_=O&&O.prototype,v={},x=function(e){var t=_[e];i(_,e,"delete"==e||"has"==e?function(e){return!(g&&!u(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return g&&!u(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,a){return t.call(this,0===e?0:e,a),this})};if("function"==typeof O&&(g||_.forEach&&!m((function(){(new O).entries().next()})))){var N=new O,k=N[y](g?{}:-0,1)!=N,w=m((function(){N.has(1)})),T=p((function(e){new O(e)})),V=!g&&m((function(){for(var e=new O,t=5;t--;)e[y](t,t);return!e.has(-0)}));T||((O=t((function(t,a){c(t,O,e);var n=d(new j,t,O);return null!=a&&s(a,f,n[y],n),n}))).prototype=_,_.constructor=O),(w||V)&&(x("delete"),x("has"),f&&x("get")),(V||k)&&x(y),g&&_.clear&&delete _.clear}else O=h.getConstructor(t,e,f,y),r(O.prototype,a),o.NEED=!0;return b(O,e),v[e]=O,l(l.G+l.W+l.F*(O!=j),v),g||h.setStrong(O,e,f),O}},1138:function(e,t,a){var n=a(12),l=a(1139).set;e.exports=function(e,t,a){var i,r=t.constructor;return r!==a&&"function"==typeof r&&(i=r.prototype)!==a.prototype&&n(i)&&l&&l(e,i),e}},1139:function(e,t,a){var n=a(12),l=a(8),i=function(e,t){if(l(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=a(24)(Function.call,a(1156).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(l){t=!0}return function(e,a){return i(e,a),t?e.__proto__=a:n(e,a),e}}({},!1):void 0),check:i}},1140:function(e,t,a){"use strict";a(1130),a(77),a(1129),a(25),a(20),a(19),a(1128);var n=a(0),l=a.n(n),i=a(1149),r=a.n(i);t.a=function(e){var t=e.currentState,a=e.humanize,n=e.icon,i=e.name,o=e.setState,s=e.values;if(0==s.size)return null;var c=Array.from(s);return l.a.createElement(l.a.Fragment,null,c.map((function(e,s){var c="string"==typeof e&&a?r()(e):e;return l.a.createElement("label",{key:s},l.a.createElement("input",{checked:t.has(e),name:i,onChange:function(a){var n=new Set(t);a.currentTarget.checked?n.add(e):n.delete(e),o(n)},type:"checkbox"}),c&&l.a.createElement(l.a.Fragment,null,n?l.a.createElement("i",{className:"feather icon-"+n}):""," ",c))})))}},1143:function(e,t,a){"use strict";var n=a(13),l=a(1144),i=a(27),r=a(26),o=a(29),s=a(1159);n(n.P,"Array",{flatMap:function(e){var t,a,n=i(this);return o(e),t=r(n.length),a=s(n,0),l(a,n,n,t,0,1,e,arguments[1]),a}}),a(88)("flatMap")},1144:function(e,t,a){"use strict";var n=a(1158),l=a(12),i=a(26),r=a(24),o=a(2)("isConcatSpreadable");e.exports=function e(t,a,s,c,u,m,p,b){for(var d,h,f=u,g=0,j=!!p&&r(p,b,3);g<c;){if(g in s){if(d=j?j(s[g],g,a):s[g],h=!1,l(d)&&(h=void 0!==(h=d[o])?!!h:n(d)),h&&m>0)f=e(t,a,d,i(d.length),f,m-1)-1;else{if(f>=9007199254740991)throw TypeError();t[f]=d}f++}g++}return f}},1147:function(e,t,a){"use strict";a(1128),a(1141),a(1142),a(1129),a(1143),a(25),a(20),a(19),a(77),a(1130);var n=a(0),l=a.n(n),i=a(1140),r=a(1134),o=a(1151),s=a.n(o);t.a=function(e){var t=e.children,a=e.filters,o=Object(n.useState)(!1),c=o[0],u=o[1],m=Object(n.useState)(new Set),p=m[0],b=m[1],d=Object(n.useState)(!1),h=d[0],f=d[1],g=Object(n.useState)(null),j=g[0],O=g[1],y=[];t&&(y=Array.isArray(t)?t:[t]);var _=y.some((function(e){return e.props.common})),v=s()(y).flatMap((function(e){return e.props.groups})).uniq().value(),x=y.some((function(e){return e.props.required})),N=y;return c&&(N=N.filter((function(e){return e.props.common}))),p.size>0&&(N=N.filter((function(e){return Array.from(p).every((function(t){return e.props.groups.includes(t)}))}))),h&&(N=N.filter((function(e){return e.props.required}))),j&&(N=N.filter((function(e){return e.props.name.toLowerCase().includes(j.toLowerCase())}))),l.a.createElement(l.a.Fragment,null,y.length>1&&!1!==a?l.a.createElement("div",{className:"filters"},l.a.createElement("div",{className:"search"},l.a.createElement("span",{className:"search--result-count"},N.length," items"),l.a.createElement("input",{className:"input--text input--lg",type:"text",onChange:function(e){return O(e.currentTarget.value)},placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"filter"},l.a.createElement("div",{className:"filter--choices"},l.a.createElement(i.a,{values:v,currentState:p,setState:b}),_&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:function(e){return u(e.currentTarget.checked)},checked:c}),"common"),x&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:function(e){return f(e.currentTarget.checked)},checked:h}),"required")))):null,!Array.isArray(N)||N.length>0?l.a.createElement("ul",{className:"connected-list"},N):l.a.createElement(r.a,{text:"no components found"}))}},1148:function(e,t,a){"use strict";a(89),a(25),a(20),a(19),a(52),a(1128),a(1141),a(1142);var n=a(0),l=a.n(n),i=a(1126),r=a.n(i),o=(a(1118),a(1160));function s(e){return e.includes(".")?'"'+e+'"':e}function c(e){return"string"==typeof e&&e.includes("\n")?'"""\n'+e+'\n"""':JSON.stringify(e)}function u(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?s(t.name)+" = "+c(t.value):s(Object.keys(t)[0])+" = "+c(Object.values(t)[0]):e?s(e)+" = "+c(t):c(t);var a}function m(e){var t=e.values,a=[];if(Array.isArray(t))for(var n in t){var i=t[n];a.push(l.a.createElement("code",{key:i},c(i))),a.push(" ")}else for(var r in t)a.push(l.a.createElement("code",{key:r,className:"with-info-icon",title:t[r]},c(r))),a.push(" ");return a}function p(e){var t=e.name,a=e.path,n=e.values,i="";return n.forEach((function(e){a&&(i+=a+"."),i+=u(t,e)+"\n"})),l.a.createElement("div",null,l.a.createElement(o.a,{className:"language-toml"},i))}function b(e){var t=e.unit,a=e.value,n="";return t&&(n=l.a.createElement(l.a.Fragment,null," (",t,")")),l.a.createElement(l.a.Fragment,null,l.a.createElement("code",null,c(a)),n)}function d(e){var t=e.value,a=Object.keys(t)[0],n=Object.values(t)[0];return""==n&&(n=null),l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:"#"+a},a))," ","= ",l.a.createElement("code",null,c(n)))}function h(e){var t=e.defaultValue,a=e.enumValues,i=e.examples,r=(e.groups,e.name),o=e.path,s=e.relevantWhen,c=e.required,u=e.unit,h=e.warnings,f=Object(n.useState)(!1),g=f[0],j=f[1];return l.a.createElement("ul",{className:"info"},h&&h.length>0&&h.map((function(e,t){return l.a.createElement("li",{key:t,className:"warning"},l.a.createElement("i",{className:"feather icon-alert-triangle"})," WARNING:"," ",e.text)})),s&&l.a.createElement("li",null,"Only ",c?"required":"relevant"," when:"," ",l.a.createElement(d,{value:s})),void 0!==t?null!==t?l.a.createElement("li",null,"Default: ",l.a.createElement(b,{unit:u,value:t})):l.a.createElement("li",null,"No default"):null,a&&l.a.createElement("li",null,"Enum, must be one of: ",l.a.createElement(m,{values:a})),(i.length>1||i[0]!=t)&&l.a.createElement("li",null,l.a.createElement("div",{className:"show-more",onClick:function(){return j(!g)}},g?"Hide examples":"View examples"),g&&l.a.createElement(p,{name:r,path:o,values:i})))}t.a=function(e){var t=e.children,a=e.common,i=e.defaultValue,o=e.enumValues,s=e.examples,c=e.groups,u=e.name,m=e.path,p=e.relevantWhen,b=e.required,d=e.templateable,f=e.type,g=e.unit,j=e.warnings,O=Object(n.useState)(!1),y=O[0],_=(O[1],t);return y&&(_=_.filter((function(e){return"p"!=e.props.originalType}))),l.a.createElement("li",{className:r()({"field-required":b,"field-collapsed":y}),required:b},l.a.createElement("div",{className:"badges"},d&&l.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),f&&l.a.createElement("span",{className:"badge badge--secondary"},f,g&&l.a.createElement(l.a.Fragment,null," (",g,")")),o&&Object.keys(o).length>0&&l.a.createElement("span",{className:"badge badge--secondary with-info-icon",title:"This option is an enumation and only allows specific values"},"enum"),a&&l.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This is a popular that we recommend for getting started"},"common"),b?l.a.createElement("span",{className:"badge badge--danger"},"required",p&&"*"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),_,!y&&"table"!=f&&l.a.createElement(h,{defaultValue:i,enumValues:o,examples:s,groups:c,name:u,path:m,relevantWhen:p,required:b,unit:g,warnings:j}))}},441:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return m})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return h}));var n=a(1),l=(a(0),a(1118)),i=a(1147),r=a(1148),o=a(1146),s=a.n(o),c=a(1153),u=a(1152);const m={last_modified_on:"2020-06-02",delivery_guarantee:"at_least_once",component_title:"GCP Cloud Storage (GCS)",description:"The Vector `gcp_cloud_storage` sink batches `log` events to Google Cloud Platform's Cloud Storage service via the XML Interface.",event_types:["log"],function_category:"transmit",issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22sink%3A+gcp_cloud_storage%22",operating_systems:["Linux","MacOS","Windows"],sidebar_label:'gcp_cloud_storage|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/sinks/gcp/cloud_storage.rs",status:"beta",title:"GCP Cloud Storage (GCS) Sink",unsupported_operating_systems:[]},p={id:"reference/sinks/gcp_cloud_storage",title:"GCP Cloud Storage (GCS) Sink",description:"The Vector `gcp_cloud_storage` sink batches `log` events to Google Cloud Platform's Cloud Storage service via the XML Interface.",source:"@site/docs/reference/sinks/gcp_cloud_storage.md",permalink:"/docs/reference/sinks/gcp_cloud_storage",sidebar_label:'gcp_cloud_storage|["log"]'},b=[{value:"Configuration",id:"configuration",children:[{value:"acl",id:"acl",children:[]},{value:"batch",id:"batch",children:[]},{value:"bucket",id:"bucket",children:[]},{value:"buffer",id:"buffer",children:[]},{value:"compression",id:"compression",children:[]},{value:"credentials_path",id:"credentials_path",children:[]},{value:"encoding",id:"encoding",children:[]},{value:"filename_append_uuid",id:"filename_append_uuid",children:[]},{value:"filename_extension",id:"filename_extension",children:[]},{value:"filename_time_format",id:"filename_time_format",children:[]},{value:"healthcheck",id:"healthcheck",children:[]},{value:"key_prefix",id:"key_prefix",children:[]},{value:"metadata",id:"metadata",children:[]},{value:"request",id:"request",children:[]},{value:"storage_class",id:"storage_class",children:[]},{value:"tls",id:"tls",children:[]}]},{value:"Env Vars",id:"env-vars",children:[{value:"GOOGLE_APPLICATION_CREDENTIALS",id:"google_application_credentials",children:[]}]},{value:"How It Works",id:"how-it-works",children:[{value:"Buffers &amp; Batches",id:"buffers--batches",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"GCP Authentication",id:"gcp-authentication",children:[]},{value:"Health Checks",id:"health-checks",children:[]},{value:"Object access control list (ACL)",id:"object-access-control-list-acl",children:[]},{value:"Object naming",id:"object-naming",children:[]},{value:"Partitioning",id:"partitioning",children:[]},{value:"Rate Limits",id:"rate-limits",children:[]},{value:"Retry Policy",id:"retry-policy",children:[]},{value:"Storage class",id:"storage-class",children:[]},{value:"TLS",id:"tls-1",children:[]},{value:"Tags &amp; metadata",id:"tags--metadata",children:[]},{value:"Template Syntax",id:"template-syntax",children:[]}]}],d={rightToc:b};function h({components:e,...t}){return Object(l.b)("wrapper",Object(n.a)({},d,t,{components:e,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"gcp_cloud_storage")," sink\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#buffers--batches"}),"batches")," ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events to ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage"}),"Google\nCloud Platform's Cloud Storage service")," via\nthe ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage/docs/xml-api/overview"}),"XML Interface"),"."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)(c.a,{block:!0,defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(l.b)(u.a,{value:"common",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[sinks.my_sink_id]\n  # General\n  type = "gcp_cloud_storage" # required\n  inputs = ["my-source-or-transform-id"] # required\n  compression = "none" # optional, default\n  credentials_path = "/path/to/credentials.json" # optional, no default\n  healthcheck = true # optional, default\n\n  # Buffer\n  buffer.max_events = 500 # optional, default, events, relevant when type = "memory"\n  buffer.type = "memory" # optional, default\n\n  # Encoding\n  encoding.codec = "ndjson" # required\n\n  # Object Names\n  key_prefix = "date=%F/" # optional, default\n'))),Object(l.b)(u.a,{value:"advanced",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[sinks.my_sink_id]\n  # General\n  type = "gcp_cloud_storage" # required\n  inputs = ["my-source-or-transform-id"] # required\n  bucket = "my-bucket" # required\n  compression = "none" # optional, default\n  credentials_path = "/path/to/credentials.json" # optional, no default\n  healthcheck = true # optional, default\n\n  # Batch\n  batch.max_size = 10485760 # optional, default, bytes\n  batch.timeout_secs = 300 # optional, default, seconds\n\n  # Buffer\n  buffer.max_events = 500 # optional, default, events, relevant when type = "memory"\n  buffer.max_size = 104900000 # required, bytes, required when type = "disk"\n  buffer.type = "memory" # optional, default\n  buffer.when_full = "block" # optional, default\n\n  # Encoding\n  encoding.codec = "ndjson" # required\n  encoding.except_fields = ["timestamp", "message", "host"] # optional, no default\n  encoding.only_fields = ["timestamp", "message", "host"] # optional, no default\n  encoding.timestamp_format = "rfc3339" # optional, default\n\n  # Object Attributes\n  acl = "authenticatedRead" # optional, no default\n  metadata.Key1 = "Value1" # example\n  storage_class = "STANDARD" # optional, no default\n\n  # Object Names\n  filename_append_uuid = true # optional, default\n  filename_extension = "log" # optional, default\n  filename_time_format = "%s" # optional, default\n  key_prefix = "date=%F/" # optional, default\n\n  # Request\n  request.in_flight_limit = 5 # optional, default, requests\n  request.rate_limit_duration_secs = 1 # optional, default, seconds\n  request.rate_limit_num = 1000 # optional, default\n  request.retry_attempts = 18446744073709551615 # optional, default\n  request.retry_initial_backoff_secs = 1 # optional, default, seconds\n  request.retry_max_duration_secs = 10 # optional, default, seconds\n  request.timeout_secs = 60 # optional, default, seconds\n\n  # TLS\n  tls.ca_file = "/path/to/certificate_authority.crt" # optional, no default\n  tls.crt_file = "/path/to/host_certificate.crt" # optional, no default\n  tls.key_file = "/path/to/host_certificate.key" # optional, no default\n  tls.key_pass = "${KEY_PASS_ENV_VAR}" # optional, no default\n  tls.verify_certificate = true # optional, default\n  tls.verify_hostname = true # optional, default\n')))),Object(l.b)(i.a,{filters:!0,mdxType:"Fields"},Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:{authenticatedRead:"Gives the bucket or object owner OWNER permission, and gives all authenticated Google account holders READER permission.",bucketOwnerFullControl:"Gives the object and bucket owners OWNER permission.",bucketOwnerRead:"Gives the object owner OWNER permission, and gives the bucket owner READER permission.",private:"Gives the bucket or object owner OWNER permission for a bucket or object.",projectPrivate:"Gives permission to the project team based on their roles. Anyone who is part of the team has READER permission. Project owners and project editors have OWNER permission. This the default.",publicRead:"Gives the bucket or object owner OWNER permission, and gives all users, both authenticated and anonymous, READER permission. When you apply this to an object, anyone on the Internet can read the object without authenticating."},examples:["authenticatedRead","bucketOwnerFullControl","bucketOwnerRead","private","projectPrivate","publicRead"],groups:[],name:"acl",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"acl"},"acl"),Object(l.b)("p",null,"Predefined ACL to apply to the created objects. For more information, see\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage/docs/access-control/lists#predefined-acl"}),"Predefined ACLs"),". If this is not set, GCS will apply\na default ACL when the object is created.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#object-access-control-list-acl"}),"Object access control list (ACL)")," for more info.")),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:[],name:"batch",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"batch"},"batch"),Object(l.b)("p",null,"Configures the sink batching behavior."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(r.a,{common:!0,defaultValue:10485760,enumValues:null,examples:[10485760],groups:[],name:"max_size",path:"batch",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"bytes",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"max_size"},"max_size"),Object(l.b)("p",null,"The maximum size of a batch, in bytes, before it is flushed.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")),Object(l.b)(r.a,{common:!0,defaultValue:300,enumValues:null,examples:[300],groups:[],name:"timeout_secs",path:"batch",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"timeout_secs"},"timeout_secs"),Object(l.b)("p",null,"The maximum age of a batch before it is flushed.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")))),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:["my-bucket"],groups:[],name:"bucket",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"bucket"},"bucket"),Object(l.b)("p",null,"The GCS bucket name.")),Object(l.b)(r.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[],name:"buffer",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"buffer"},"buffer"),Object(l.b)("p",null,"Configures the sink specific buffer behavior."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(r.a,{common:!0,defaultValue:500,enumValues:null,examples:[500],groups:[],name:"max_events",path:"buffer",relevantWhen:{type:"memory"},required:!1,templateable:!1,type:"uint",unit:"events",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"max_events"},"max_events"),Object(l.b)("p",null,"The maximum number of ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/"}),"events")," allowed in the buffer.")),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[1049e5],groups:[],name:"max_size",path:"buffer",relevantWhen:{type:"disk"},required:!0,templateable:!1,type:"uint",unit:"bytes",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"max_size-1"},"max_size"),Object(l.b)("p",null,"The maximum size of the buffer on the disk.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")),Object(l.b)(r.a,{common:!0,defaultValue:"memory",enumValues:{memory:"Stores the sink's buffer in memory. This is more performant, but less durable. Data will be lost if Vector is restarted forcefully.",disk:"Stores the sink's buffer on disk. This is less performant, but durable. Data will not be lost between restarts."},examples:["memory","disk"],groups:[],name:"type",path:"buffer",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"type"},"type"),Object(l.b)("p",null,"The buffer's type and storage mechanism.")),Object(l.b)(r.a,{common:!1,defaultValue:"block",enumValues:{block:"Applies back pressure when the buffer is full. This prevents data loss, but will cause data to pile up on the edge.",drop_newest:"Drops new data as it's received. This data is lost. This should be used when performance is the highest priority."},examples:["block","drop_newest"],groups:[],name:"when_full",path:"buffer",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"when_full"},"when_full"),Object(l.b)("p",null,"The behavior when the buffer becomes full.")))),Object(l.b)(r.a,{common:!0,defaultValue:"none",enumValues:{none:"No compression.",gzip:"[Gzip][urls.gzip] standard DEFLATE compression."},examples:["none","gzip"],groups:[],name:"compression",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"compression"},"compression"),Object(l.b)("p",null,"The compression strategy used to compress the encoded event data before\ntransmission.")),Object(l.b)(r.a,{common:!0,defaultValue:null,enumValues:null,examples:["/path/to/credentials.json"],groups:[],name:"credentials_path",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"credentials_path"},"credentials_path"),Object(l.b)("p",null,"The filename for a Google Cloud service account credentials JSON file used to\nauthenticate access to the Cloud Storage API. If this is unset, Vector checks\nthe ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#google_application_credentials"}),Object(l.b)("inlineCode",{parentName:"a"},"GOOGLE_APPLICATION_CREDENTIALS"))," environment variable for a filename."),Object(l.b)("p",null,"If no filename is named, Vector will attempt to fetch an instance service\naccount for the compute instance the program is running on. If Vector is not\nrunning on a GCE instance, you must define a credentials file as above.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#gcp-authentication"}),"GCP Authentication")," for more info.")),Object(l.b)(r.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[],name:"encoding",path:null,relevantWhen:null,required:!0,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"encoding"},"encoding"),Object(l.b)("p",null,"Configures the encoding specific sink behavior."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(r.a,{common:!0,defaultValue:null,enumValues:{ndjson:"Each event is encoded into JSON and the payload is new line delimited.",text:"Each event is encoded into text via the `message` key and the payload is new line delimited."},examples:["ndjson","text"],groups:[],name:"codec",path:"encoding",relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"codec"},"codec"),Object(l.b)("p",null,"The encoding codec used to serialize the events before outputting.")),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[["timestamp","message","host"]],groups:[],name:"except_fields",path:"encoding",relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"except_fields"},"except_fields"),Object(l.b)("p",null,"Prevent the sink from encoding the specified labels.")),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[["timestamp","message","host"]],groups:[],name:"only_fields",path:"encoding",relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"only_fields"},"only_fields"),Object(l.b)("p",null,"Limit the sink to only encoding the specified labels.")),Object(l.b)(r.a,{common:!1,defaultValue:"rfc3339",enumValues:{rfc3339:"Format as an RFC3339 string",unix:"Format as a unix timestamp, can be parsed as a Clickhouse DateTime"},examples:["rfc3339","unix"],groups:[],name:"timestamp_format",path:"encoding",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"timestamp_format"},"timestamp_format"),Object(l.b)("p",null,"How to format event timestamps.")))),Object(l.b)(r.a,{common:!1,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:"filename_append_uuid",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"filename_append_uuid"},"filename_append_uuid"),Object(l.b)("p",null,"Whether or not to append a UUID v4 token to the end of the file. This ensures\nthere are no name collisions high volume use cases.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#object-naming"}),"Object naming")," for more info.")),Object(l.b)(r.a,{common:!1,defaultValue:"log",enumValues:null,examples:["log"],groups:[],name:"filename_extension",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"filename_extension"},"filename_extension"),Object(l.b)("p",null,"The filename extension to use in the object name.")),Object(l.b)(r.a,{common:!1,defaultValue:"%s",enumValues:null,examples:["%s"],groups:[],name:"filename_time_format",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"filename_time_format"},"filename_time_format"),Object(l.b)("p",null,"The format of the resulting object file name. ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html#specifiers"}),Object(l.b)("inlineCode",{parentName:"a"},"strftime"),"\nspecifiers")," are supported.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#object-naming"}),"Object naming")," for more info.")),Object(l.b)(r.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:"healthcheck",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"healthcheck"},"healthcheck"),Object(l.b)("p",null,"Enables/disables the sink healthcheck upon start.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#health-checks"}),"Health Checks")," for more info.")),Object(l.b)(r.a,{common:!0,defaultValue:"date=%F/",enumValues:null,examples:["date=%F/","date=%F/hour=%H/","year=%Y/month=%m/day=%d/","application_id={{ application_id }}/date=%F/"],groups:[],name:"key_prefix",path:null,relevantWhen:null,required:!1,templateable:!0,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"key_prefix"},"key_prefix"),Object(l.b)("p",null,"A prefix to apply to all object key names. This should be used to partition\nyour objects, and it's important to end this value with a ",Object(l.b)("inlineCode",{parentName:"p"},"/"),' if you want this\nto be the root GCS "folder".\nSee ',Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#object-naming"}),"Object naming"),", ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#partitioning"}),"Partitioning"),", and ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#template-syntax"}),"Template Syntax")," for more info.")),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:[],name:"metadata",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"metadata"},"metadata"),Object(l.b)("p",null,"The set of metadata ",Object(l.b)("inlineCode",{parentName:"p"},"key:value")," pairs for the created objects. See the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage/docs/metadata#custom-metadata"}),"GCS\ncustom metadata")," documentation for more details."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[{Key1:"Value1"}],groups:[],name:"`[key-name]`",path:"metadata",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"key-name"},Object(l.b)("inlineCode",{parentName:"h4"},"[key-name]")),Object(l.b)("p",null,"A custom metadata item to be added to the created objects.")))),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:[],name:"request",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"request"},"request"),Object(l.b)("p",null,"Configures the sink request behavior."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(r.a,{common:!0,defaultValue:5,enumValues:null,examples:[5],groups:[],name:"in_flight_limit",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"requests",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"in_flight_limit"},"in_flight_limit"),Object(l.b)("p",null,"The maximum number of in-flight requests allowed at any given time.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#rate-limits"}),"Rate Limits")," for more info.")),Object(l.b)(r.a,{common:!0,defaultValue:1,enumValues:null,examples:[1],groups:[],name:"rate_limit_duration_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"rate_limit_duration_secs"},"rate_limit_duration_secs"),Object(l.b)("p",null,"The time window, in seconds, used for the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#rate_limit_num"}),Object(l.b)("inlineCode",{parentName:"a"},"rate_limit_num"))," option.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#rate-limits"}),"Rate Limits")," for more info.")),Object(l.b)(r.a,{common:!0,defaultValue:1e3,enumValues:null,examples:[1e3],groups:[],name:"rate_limit_num",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"rate_limit_num"},"rate_limit_num"),Object(l.b)("p",null,"The maximum number of requests allowed within the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#rate_limit_duration_secs"}),Object(l.b)("inlineCode",{parentName:"a"},"rate_limit_duration_secs")),"\ntime window.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#rate-limits"}),"Rate Limits")," for more info.")),Object(l.b)(r.a,{common:!1,defaultValue:0x10000000000000000,enumValues:null,examples:[0x10000000000000000],groups:[],name:"retry_attempts",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"retry_attempts"},"retry_attempts"),Object(l.b)("p",null,"The maximum number of retries to make for failed requests. The default, for all\nintents and purposes, represents an infinite number of retries.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#retry-policy"}),"Retry Policy")," for more info.")),Object(l.b)(r.a,{common:!1,defaultValue:1,enumValues:null,examples:[1],groups:[],name:"retry_initial_backoff_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"retry_initial_backoff_secs"},"retry_initial_backoff_secs"),Object(l.b)("p",null,"The amount of time to wait before attempting the first retry for a failed\nrequest. Once, the first retry has failed the fibonacci sequence will be used\nto select future backoffs.")),Object(l.b)(r.a,{common:!1,defaultValue:10,enumValues:null,examples:[10],groups:[],name:"retry_max_duration_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"retry_max_duration_secs"},"retry_max_duration_secs"),Object(l.b)("p",null,"The maximum amount of time, in seconds, to wait between retries.")),Object(l.b)(r.a,{common:!0,defaultValue:60,enumValues:null,examples:[60],groups:[],name:"timeout_secs",path:"request",relevantWhen:null,required:!1,templateable:!1,type:"uint",unit:"seconds",warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"timeout_secs-1"},"timeout_secs"),Object(l.b)("p",null,"The maximum time a request can take before being aborted. It is highly\nrecommended that you do not lower value below the service's internal timeout,\nas this could create orphaned requests, pile on retries, and result in\nduplicate data downstream.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#buffers--batches"}),"Buffers & Batches")," for more info.")))),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:{STANDARD:"Standard Storage is best for data that is frequently accessed and/or stored for only brief periods of time. This is the default.",NEARLINE:"Nearline Storage is a low-cost, highly durable storage service for storing infrequently accessed data.",COLDLINE:"Coldline Storage is a very-low-cost, highly durable storage service for storing infrequently accessed data.",ARCHIVE:"Archive Storage is the lowest-cost, highly durable storage service for data archiving, online backup, and disaster recovery."},examples:["STANDARD","NEARLINE","COLDLINE","ARCHIVE"],groups:[],name:"storage_class",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"storage_class"},"storage_class"),Object(l.b)("p",null,"The storage class for the created objects. See ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage/docs/storage-classes"}),"the GCP storage\nclasses")," for more details.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#storage-class"}),"Storage class")," for more info.")),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:[],groups:[],name:"tls",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"tls"},"tls"),Object(l.b)("p",null,"Configures the TLS options for connections from this sink."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:["/path/to/certificate_authority.crt"],groups:[],name:"ca_file",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"ca_file"},"ca_file"),Object(l.b)("p",null,"Absolute path to an additional CA certificate file, in DER or PEM format\n(X.509), or an inline CA certificate in PEM format.")),Object(l.b)(r.a,{common:!0,defaultValue:null,enumValues:null,examples:["/path/to/host_certificate.crt"],groups:[],name:"crt_file",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"crt_file"},"crt_file"),Object(l.b)("p",null,"Absolute path to a certificate file used to identify this connection, in DER or\nPEM format (X.509) or PKCS#12, or an inline certificate in PEM format. If this\nis set and is not a PKCS#12 archive, ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#key_file"}),Object(l.b)("inlineCode",{parentName:"a"},"key_file"))," must also be set.")),Object(l.b)(r.a,{common:!0,defaultValue:null,enumValues:null,examples:["/path/to/host_certificate.key"],groups:[],name:"key_file",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"key_file"},"key_file"),Object(l.b)("p",null,"Absolute path to a private key file used to identify this connection, in DER or\nPEM format (PKCS#8), or an inline private key in PEM format. If this is set,\n",Object(l.b)("inlineCode",{parentName:"p"},"crt_file")," must also be set.")),Object(l.b)(r.a,{common:!1,defaultValue:null,enumValues:null,examples:["${KEY_PASS_ENV_VAR}","PassWord1"],groups:[],name:"key_pass",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"key_pass"},"key_pass"),Object(l.b)("p",null,"Pass phrase used to unlock the encrypted key file. This has no effect unless\n",Object(l.b)("inlineCode",{parentName:"p"},"key_file")," is set.")),Object(l.b)(r.a,{common:!1,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:"verify_certificate",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[{visibility_level:"option",text:"Setting this to `false` means the certificate will be loaded and checked for validity, but the handshake will not attempt to verify the certificate. Do NOT set this to `false` unless you understand the risks of not verifying the remote certificate.",option_name:"verify_certificate"}],mdxType:"Field"},Object(l.b)("h4",{id:"verify_certificate"},"verify_certificate"),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"true")," (the default), Vector will validate the TLS certificate of the remote\nhost.")),Object(l.b)(r.a,{common:!1,defaultValue:!0,enumValues:null,examples:[!0,!1],groups:[],name:"verify_hostname",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"verify_hostname"},"verify_hostname"),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"true")," (the default), Vector will validate the configured remote host name\nagainst the remote host's TLS certificate. Do NOT set this to ",Object(l.b)("inlineCode",{parentName:"p"},"false")," unless\nyou understand the risks of not verifying the remote hostname."))))),Object(l.b)("h2",{id:"env-vars"},"Env Vars"),Object(l.b)(i.a,{filters:!0,mdxType:"Fields"},Object(l.b)(r.a,{common:!0,defaultValue:null,enumValues:null,examples:["/path/to/credentials.json"],groups:[],name:"GOOGLE_APPLICATION_CREDENTIALS",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"google_application_credentials"},"GOOGLE_APPLICATION_CREDENTIALS"),Object(l.b)("p",null,"The filename for a Google Cloud service account credentials JSON file used to\nauthenticate access to the Cloud Storage API.\nSee ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#gcp-authentication"}),"GCP Authentication")," for more info."))),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"buffers--batches"},"Buffers & Batches"),Object(l.b)(s.a,{src:"/img/buffers-and-batches-partitioned.svg",mdxType:"SVG"}),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"gcp_cloud_storage")," sink buffers & batches data as\nshown in the diagram above. You'll notice that Vector treats these concepts\ndifferently, instead of treating them as global concepts, Vector treats them\nas sink specific concepts. This isolates sinks, ensuring services disruptions\nare contained and ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/guarantees/"}),"delivery guarantees")," are honored."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Batches")," are flushed when 1 of 2 conditions are met:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"The batch age meets or exceeds the configured ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#timeout_secs"}),Object(l.b)("inlineCode",{parentName:"a"},"timeout_secs")),"."),Object(l.b)("li",{parentName:"ol"},"The batch size meets or exceeds the configured ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#max_size"}),Object(l.b)("inlineCode",{parentName:"a"},"max_size")),".")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Buffers")," are controlled via the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#buffer"}),Object(l.b)("inlineCode",{parentName:"a"},"buffer.*"))," options."),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables")," section."),Object(l.b)("h3",{id:"gcp-authentication"},"GCP Authentication"),Object(l.b)("p",null,"GCP offers a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/docs/authentication/"}),"variety of authentication methods")," and\nVector is concerned with the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/docs/authentication/production"}),"server to server methods"),"\nand will find credentials in the following order:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"If the ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#credentials_path"}),Object(l.b)("inlineCode",{parentName:"a"},"credentials_path"))," option is set."),Object(l.b)("li",{parentName:"ol"},"If the ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#google_application_credentials"}),Object(l.b)("inlineCode",{parentName:"a"},"GOOGLE_APPLICATION_CREDENTIALS"))," envrionment variable is set."),Object(l.b)("li",{parentName:"ol"},"Finally, Vector will check for an ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://cloud.google.com/docs/authentication/production#obtaining_and_providing_service_account_credentials_manually"}),"instance service account"),".")),Object(l.b)("p",null,"If credentials are not found the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#healthchecks"}),"healtcheck")," will fail and an\nerror will be ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/administration/monitoring/#logs"}),"logged"),"."),Object(l.b)("h3",{id:"health-checks"},"Health Checks"),Object(l.b)("p",null,"Health checks ensure that the downstream service is accessible and ready to\naccept data. This check is performed upon sink initialization.\nIf the health check fails an error will be logged and Vector will proceed to\nstart."),Object(l.b)("h4",{id:"require-health-checks"},"Require Health Checks"),Object(l.b)("p",null,"If you'd like to exit immediately upon a health check failure, you can\npass the ",Object(l.b)("inlineCode",{parentName:"p"},"--require-healthy")," flag:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector --config /etc/vector/vector.toml --require-healthy\n")),Object(l.b)("h4",{id:"disable-health-checks"},"Disable Health Checks"),Object(l.b)("p",null,"If you'd like to disable health checks for this sink you can set the\n",Object(l.b)("inlineCode",{parentName:"p"},"healthcheck")," option to ",Object(l.b)("inlineCode",{parentName:"p"},"false"),"."),Object(l.b)("h3",{id:"object-access-control-list-acl"},"Object access control list (ACL)"),Object(l.b)("p",null,"GCP Cloud Storage supports access control lists (ACL) for buckets and\nobjects. In the context of Vector, only object ACLs are relevant (Vector\ndoes not create or modify buckets). You can set the object level ACL by\nusing the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#acl"}),Object(l.b)("inlineCode",{parentName:"a"},"acl"))," option, which allows you to set one of the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage/docs/access-control/lists#predefined-acl"}),"predefined\nACLs")," on each created object."),Object(l.b)("h3",{id:"object-naming"},"Object naming"),Object(l.b)("p",null,"By default, Vector will name your GCS objects in the following format:"),Object(l.b)(c.a,{block:!0,defaultValue:"without_compression",values:[{label:"Without Compression",value:"without_compression"},{label:"With Compression",value:"with_compression"}],mdxType:"Tabs"},Object(l.b)(u.a,{value:"without_compression",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"<key_prefix><timestamp>-<uuidv4>.log\n")),Object(l.b)("p",null,"For example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"date=2019-06-18/1560886634-fddd7a0e-fad9-4f7e-9bce-00ae5debc563.log\n"))),Object(l.b)(u.a,{value:"with_compression",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"<key_prefix><timestamp>-<uuidv4>.log.gz\n")),Object(l.b)("p",null,"For example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"date=2019-06-18/1560886634-fddd7a0e-fad9-4f7e-9bce-00ae5debc563.log.gz\n")))),Object(l.b)("p",null,"Vector appends a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)"}),"UUIDV4")," token to ensure there are no name\nconflicts in the unlikely event 2 Vector instances are writing data at the same\ntime."),Object(l.b)("p",null,"You can control the resulting name via the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#key_prefix"}),Object(l.b)("inlineCode",{parentName:"a"},"key_prefix")),", ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#filename_time_format"}),Object(l.b)("inlineCode",{parentName:"a"},"filename_time_format")),",\nand ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#filename_append_uuid"}),Object(l.b)("inlineCode",{parentName:"a"},"filename_append_uuid"))," options."),Object(l.b)("h3",{id:"partitioning"},"Partitioning"),Object(l.b)("p",null,"Partitioning is controlled via the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#key_prefix"}),Object(l.b)("inlineCode",{parentName:"a"},"key_prefix")),"\noptions and allows you to dynamically partition data on the fly.\nYou'll notice that Vector's ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/templating/"}),"template sytax")," is\nsupported for these options, enabling you to use field values as partition keys."),Object(l.b)("h3",{id:"rate-limits"},"Rate Limits"),Object(l.b)("p",null,"Vector offers a few levers to control the rate and volume of requests to the\ndownstream service. Start with the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#rate_limit_duration_secs"}),Object(l.b)("inlineCode",{parentName:"a"},"rate_limit_duration_secs"))," and\n",Object(l.b)("inlineCode",{parentName:"p"},"rate_limit_num")," options to ensure Vector does not exceed the specified\nnumber of requests in the specified window. You can further control the pace at\nwhich this window is saturated with the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#in_flight_limit"}),Object(l.b)("inlineCode",{parentName:"a"},"in_flight_limit"))," option, which\nwill guarantee no more than the specified number of requests are in-flight at\nany given time."),Object(l.b)("p",null,"Please note, Vector's defaults are carefully chosen and it should be rare that\nyou need to adjust these. If you found a good reason to do so please share it\nwith the Vector team by ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/timberio/vector/issues/new?labels=sink%3A+gcp_cloud_storage"}),"opening an issue"),"."),Object(l.b)("h3",{id:"retry-policy"},"Retry Policy"),Object(l.b)("p",null,"Vector will retry failed requests (status == ",Object(l.b)("inlineCode",{parentName:"p"},"429"),", >= ",Object(l.b)("inlineCode",{parentName:"p"},"500"),", and != ",Object(l.b)("inlineCode",{parentName:"p"},"501"),").\nOther responses will ",Object(l.b)("em",{parentName:"p"},"not")," be retried. You can control the number of retry\nattempts and backoff rate with the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#retry_attempts"}),Object(l.b)("inlineCode",{parentName:"a"},"retry_attempts"))," and\n",Object(l.b)("inlineCode",{parentName:"p"},"retry_backoff_secs")," options."),Object(l.b)("h3",{id:"storage-class"},"Storage class"),Object(l.b)("p",null,"GCS offers ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage/docs/storage-classes"}),"storage classes"),". You can apply\ndefaults, and rules, at the bucket level or set the storage class at the\nobject level. In the context of Vector only the object level is relevant\n(Vector does not create or modify buckets). You can set the storage\nclass via the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#storage_class"}),Object(l.b)("inlineCode",{parentName:"a"},"storage_class"))," option."),Object(l.b)("h3",{id:"tls-1"},"TLS"),Object(l.b)("p",null,"Vector uses ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.openssl.org/"}),"Openssl")," for TLS protocols for it's battle-tested\nand reliable security. You can enable and adjust TLS behavior via the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#tls"}),Object(l.b)("inlineCode",{parentName:"a"},"tls.*")),"\noptions."),Object(l.b)("h3",{id:"tags--metadata"},"Tags & metadata"),Object(l.b)("p",null,"Vector supports adding ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://cloud.google.com/storage/docs/metadata#custom-metadata"}),"custom metadata")," to\ncreated objects. These metadata items are a way of associating extra\ndata items with the object that are not part of the uploaded data."),Object(l.b)("h3",{id:"template-syntax"},"Template Syntax"),Object(l.b)("p",null,"The ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#key_prefix"}),Object(l.b)("inlineCode",{parentName:"a"},"key_prefix"))," options\nsupport ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/templating/"}),"Vector's template syntax"),", enabling dynamic\nvalues derived from the event's data. This syntax accepts\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html#specifiers"}),"strptime specifiers")," as well as the\n",Object(l.b)("inlineCode",{parentName:"p"},"{{ field_name }}")," syntax for accessing event fields. For example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[sinks.my_gcp_cloud_storage_sink_id]\n  # ...\n  key_prefix = "date=%F/"\n  key_prefix = "date=%F/hour=%H/"\n  key_prefix = "year=%Y/month=%m/day=%d/"\n  key_prefix = "application_id={{ application_id }}/date=%F/"\n  # ...\n')),Object(l.b)("p",null,"You can learn more about the complete syntax in the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/templating/"}),"templating reference"),"."))}h.isMDXComponent=!0}}]);