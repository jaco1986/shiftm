(window.webpackJsonp=window.webpackJsonp||[]).push([[793],{1139:function(e,t,n){"use strict";var a=n(24),r=n(13),l=n(27),i=n(84),o=n(85),c=n(26),s=n(1145),u=n(86);r(r.S+r.F*!n(81)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,r,m,p=l(e),b="function"==typeof this?this:Array,d=arguments.length,g=d>1?arguments[1]:void 0,h=void 0!==g,f=0,v=u(p);if(h&&(g=a(g,d>2?arguments[2]:void 0,2)),null==v||b==Array&&o(v))for(n=new b(t=c(p.length));t>f;f++)s(n,f,h?g(p[f],f):p[f]);else for(m=v.call(p),n=new b;!(r=m.next()).done;f++)s(n,f,h?i(m,g,[r.value,f],!0):r.value);return n.length=f,n}})},1140:function(e,t,n){"use strict";var a=n(1146),r=n(1141);e.exports=n(1147)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return a.def(r(this,"Set"),e=0===e?0:e,e)}},a)},1141:function(e,t,n){var a=n(12);e.exports=function(e,t){if(!a(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},1142:function(e,t,n){"use strict";var a=n(0),r=n.n(a),l=n(1137),i=n(1136),o=n.n(i);n(131);t.a=function(e){var t=e.className,n=e.size,a=e.style,i=e.text;return r.a.createElement(l.a,{to:"/vic/",className:o()("vic","vic--"+n,t)},r.a.createElement("div",{className:"icon"},r.a.createElement("img",{src:"/img/vicmojis/vic"+a+".svg",alt:"Vic - The Vector Mascot"})),i&&r.a.createElement("div",{className:"text"},i))}},1144:function(e,t,n){"use strict";var a=n(0),r=n.n(a),l=(n(1137),n(1142));t.a=function(e){var t=e.text;return r.a.createElement("section",{className:"empty"},r.a.createElement(l.a,{style:"no",text:t}))}},1145:function(e,t,n){"use strict";var a=n(28),r=n(53);e.exports=function(e,t,n){t in e?a.f(e,t,r(0,n)):e[t]=n}},1146:function(e,t,n){"use strict";var a=n(28).f,r=n(82),l=n(80),i=n(24),o=n(78),c=n(79),s=n(54),u=n(83),m=n(87),p=n(10),b=n(1143).fastKey,d=n(1141),g=p?"_s":"size",h=function(e,t){var n,a=b(t);if("F"!==a)return e._i[a];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,s){var u=e((function(e,a){o(e,u,t,"_i"),e._t=t,e._i=r(null),e._f=void 0,e._l=void 0,e[g]=0,null!=a&&c(a,n,e[s],e)}));return l(u.prototype,{clear:function(){for(var e=d(this,t),n=e._i,a=e._f;a;a=a.n)a.r=!0,a.p&&(a.p=a.p.n=void 0),delete n[a.i];e._f=e._l=void 0,e[g]=0},delete:function(e){var n=d(this,t),a=h(n,e);if(a){var r=a.n,l=a.p;delete n._i[a.i],a.r=!0,l&&(l.n=r),r&&(r.p=l),n._f==a&&(n._f=r),n._l==a&&(n._l=l),n[g]--}return!!a},forEach:function(e){d(this,t);for(var n,a=i(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(a(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!h(d(this,t),e)}}),p&&a(u.prototype,"size",{get:function(){return d(this,t)[g]}}),u},def:function(e,t,n){var a,r,l=h(e,t);return l?l.v=n:(e._l=l={i:r=b(t,!0),k:t,v:n,p:a=e._l,n:void 0,r:!1},e._f||(e._f=l),a&&(a.n=l),e[g]++,"F"!==r&&(e._i[r]=l)),e},getEntry:h,setStrong:function(e,t,n){s(e,t,(function(e,n){this._t=d(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?u(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,u(1))}),n?"entries":"values",!n,!0),m(t)}}},1147:function(e,t,n){"use strict";var a=n(5),r=n(13),l=n(15),i=n(80),o=n(1143),c=n(79),s=n(78),u=n(12),m=n(14),p=n(81),b=n(39),d=n(1148);e.exports=function(e,t,n,g,h,f){var v=a[e],j=v,O=h?"set":"add",_=j&&j.prototype,y={},N=function(e){var t=_[e];l(_,e,"delete"==e||"has"==e?function(e){return!(f&&!u(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return f&&!u(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof j&&(f||_.forEach&&!m((function(){(new j).entries().next()})))){var w=new j,E=w[O](f?{}:-0,1)!=w,x=m((function(){w.has(1)})),k=p((function(e){new j(e)})),T=!f&&m((function(){for(var e=new j,t=5;t--;)e[O](t,t);return!e.has(-0)}));k||((j=t((function(t,n){s(t,j,e);var a=d(new v,t,j);return null!=n&&c(n,h,a[O],a),a}))).prototype=_,_.constructor=j),(x||T)&&(N("delete"),N("has"),h&&N("get")),(T||E)&&N(O),f&&_.clear&&delete _.clear}else j=g.getConstructor(t,e,h,O),i(j.prototype,n),o.NEED=!0;return b(j,e),y[e]=j,r(r.G+r.W+r.F*(j!=v),y),f||g.setStrong(j,e,h),j}},1148:function(e,t,n){var a=n(12),r=n(1149).set;e.exports=function(e,t,n){var l,i=t.constructor;return i!==n&&"function"==typeof i&&(l=i.prototype)!==n.prototype&&a(l)&&r&&r(e,l),e}},1149:function(e,t,n){var a=n(12),r=n(8),l=function(e,t){if(r(e),!a(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,a){try{(a=n(24)(Function.call,n(1163).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(r){t=!0}return function(e,n){return l(e,n),t?e.__proto__=n:a(e,n),e}}({},!1):void 0),check:l}},1150:function(e,t,n){"use strict";n(1140),n(77),n(1139),n(25),n(20),n(19),n(1138);var a=n(0),r=n.n(a),l=n(1157),i=n.n(l);t.a=function(e){var t=e.currentState,n=e.humanize,a=e.icon,l=e.name,o=e.setState,c=e.values;if(0==c.size)return null;var s=Array.from(c);return r.a.createElement(r.a.Fragment,null,s.map((function(e,c){var s="string"==typeof e&&n?i()(e):e;return r.a.createElement("label",{key:c},r.a.createElement("input",{checked:t.has(e),name:l,onChange:function(n){var a=new Set(t);n.currentTarget.checked?a.add(e):a.delete(e),o(a)},type:"checkbox"}),s&&r.a.createElement(r.a.Fragment,null,a?r.a.createElement("i",{className:"feather icon-"+a}):""," ",s))})))}},1153:function(e,t,n){"use strict";var a=n(13),r=n(1154),l=n(27),i=n(26),o=n(29),c=n(1166);a(a.P,"Array",{flatMap:function(e){var t,n,a=l(this);return o(e),t=i(a.length),n=c(a,0),r(n,a,a,t,0,1,e,arguments[1]),n}}),n(88)("flatMap")},1154:function(e,t,n){"use strict";var a=n(1165),r=n(12),l=n(26),i=n(24),o=n(2)("isConcatSpreadable");e.exports=function e(t,n,c,s,u,m,p,b){for(var d,g,h=u,f=0,v=!!p&&i(p,b,3);f<s;){if(f in c){if(d=v?v(c[f],f,n):c[f],g=!1,r(d)&&(g=void 0!==(g=d[o])?!!g:a(d)),g&&m>0)h=e(t,n,d,l(d.length),h,m-1)-1;else{if(h>=9007199254740991)throw TypeError();t[h]=d}h++}f++}return h}},1155:function(e,t,n){"use strict";n(1138),n(1151),n(1152),n(1139),n(1153),n(25),n(20),n(19),n(77),n(1140);var a=n(0),r=n.n(a),l=n(1150),i=n(1144),o=n(1158),c=n.n(o);t.a=function(e){var t=e.children,n=e.filters,o=Object(a.useState)(!1),s=o[0],u=o[1],m=Object(a.useState)(new Set),p=m[0],b=m[1],d=Object(a.useState)(!1),g=d[0],h=d[1],f=Object(a.useState)(null),v=f[0],j=f[1],O=[];t&&(O=Array.isArray(t)?t:[t]);var _=O.some((function(e){return e.props.common})),y=c()(O).flatMap((function(e){return e.props.groups})).uniq().value(),N=O.some((function(e){return e.props.required})),w=O;return s&&(w=w.filter((function(e){return e.props.common}))),p.size>0&&(w=w.filter((function(e){return Array.from(p).every((function(t){return e.props.groups.includes(t)}))}))),g&&(w=w.filter((function(e){return e.props.required}))),v&&(w=w.filter((function(e){return e.props.name.toLowerCase().includes(v.toLowerCase())}))),r.a.createElement(r.a.Fragment,null,O.length>1&&!1!==n?r.a.createElement("div",{className:"filters"},r.a.createElement("div",{className:"search"},r.a.createElement("span",{className:"search--result-count"},w.length," items"),r.a.createElement("input",{className:"input--text input--lg",type:"text",onChange:function(e){return j(e.currentTarget.value)},placeholder:"\ud83d\udd0d Search..."})),r.a.createElement("div",{className:"filter"},r.a.createElement("div",{className:"filter--choices"},r.a.createElement(l.a,{values:y,currentState:p,setState:b}),_&&r.a.createElement("label",{title:"Only show popular/common results"},r.a.createElement("input",{type:"checkbox",onChange:function(e){return u(e.currentTarget.checked)},checked:s}),"common"),N&&r.a.createElement("label",{title:"Only show required results"},r.a.createElement("input",{type:"checkbox",onChange:function(e){return h(e.currentTarget.checked)},checked:g}),"required")))):null,!Array.isArray(w)||w.length>0?r.a.createElement("ul",{className:"connected-list"},w):r.a.createElement(i.a,{text:"no components found"}))}},1156:function(e,t,n){"use strict";n(89),n(25),n(20),n(19),n(52),n(1138),n(1151),n(1152);var a=n(0),r=n.n(a),l=n(1136),i=n.n(l),o=(n(1128),n(1167));function c(e){return e.includes(".")?'"'+e+'"':e}function s(e){return"string"==typeof e&&e.includes("\n")?'"""\n'+e+'\n"""':JSON.stringify(e)}function u(e,t){return(n=t)&&n.constructor===Object?"name"in t&&"value"in t?c(t.name)+" = "+s(t.value):c(Object.keys(t)[0])+" = "+s(Object.values(t)[0]):e?c(e)+" = "+s(t):s(t);var n}function m(e){var t=e.values,n=[];if(Array.isArray(t))for(var a in t){var l=t[a];n.push(r.a.createElement("code",{key:l},s(l))),n.push(" ")}else for(var i in t)n.push(r.a.createElement("code",{key:i,className:"with-info-icon",title:t[i]},s(i))),n.push(" ");return n}function p(e){var t=e.name,n=e.path,a=e.values,l="";return a.forEach((function(e){n&&(l+=n+"."),l+=u(t,e)+"\n"})),r.a.createElement("div",null,r.a.createElement(o.a,{className:"language-toml"},l))}function b(e){var t=e.unit,n=e.value,a="";return t&&(a=r.a.createElement(r.a.Fragment,null," (",t,")")),r.a.createElement(r.a.Fragment,null,r.a.createElement("code",null,s(n)),a)}function d(e){var t=e.value,n=Object.keys(t)[0],a=Object.values(t)[0];return""==a&&(a=null),r.a.createElement("span",null,r.a.createElement("code",null,r.a.createElement("a",{href:"#"+n},n))," ","= ",r.a.createElement("code",null,s(a)))}function g(e){var t=e.defaultValue,n=e.enumValues,l=e.examples,i=(e.groups,e.name),o=e.path,c=e.relevantWhen,s=e.required,u=e.unit,g=e.warnings,h=Object(a.useState)(!1),f=h[0],v=h[1];return r.a.createElement("ul",{className:"info"},g&&g.length>0&&g.map((function(e,t){return r.a.createElement("li",{key:t,className:"warning"},r.a.createElement("i",{className:"feather icon-alert-triangle"})," WARNING:"," ",e.text)})),c&&r.a.createElement("li",null,"Only ",s?"required":"relevant"," when:"," ",r.a.createElement(d,{value:c})),void 0!==t?null!==t?r.a.createElement("li",null,"Default: ",r.a.createElement(b,{unit:u,value:t})):r.a.createElement("li",null,"No default"):null,n&&r.a.createElement("li",null,"Enum, must be one of: ",r.a.createElement(m,{values:n})),(l.length>1||l[0]!=t)&&r.a.createElement("li",null,r.a.createElement("div",{className:"show-more",onClick:function(){return v(!f)}},f?"Hide examples":"View examples"),f&&r.a.createElement(p,{name:i,path:o,values:l})))}t.a=function(e){var t=e.children,n=e.common,l=e.defaultValue,o=e.enumValues,c=e.examples,s=e.groups,u=e.name,m=e.path,p=e.relevantWhen,b=e.required,d=e.templateable,h=e.type,f=e.unit,v=e.warnings,j=Object(a.useState)(!1),O=j[0],_=(j[1],t);return O&&(_=_.filter((function(e){return"p"!=e.props.originalType}))),r.a.createElement("li",{className:i()({"field-required":b,"field-collapsed":O}),required:b},r.a.createElement("div",{className:"badges"},d&&r.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),h&&r.a.createElement("span",{className:"badge badge--secondary"},h,f&&r.a.createElement(r.a.Fragment,null," (",f,")")),o&&Object.keys(o).length>0&&r.a.createElement("span",{className:"badge badge--secondary with-info-icon",title:"This option is an enumation and only allows specific values"},"enum"),n&&r.a.createElement("span",{className:"badge badge--primary with-info-icon",title:"This is a popular that we recommend for getting started"},"common"),b?r.a.createElement("span",{className:"badge badge--danger"},"required",p&&"*"):r.a.createElement("span",{className:"badge badge--secondary"},"optional")),_,!O&&"table"!=h&&r.a.createElement(g,{defaultValue:l,enumValues:o,examples:c,groups:s,name:u,path:m,relevantWhen:p,required:b,unit:f,warnings:v}))}},952:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return m})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return d}));var a=n(1),r=n(9),l=(n(0),n(1128)),i=n(1155),o=n(1156),c=n(1161),s=n(1160),u={last_modified_on:"2020-06-10",component_title:"Log to Metric",description:"The Vector `log_to_metric` transform accepts `log` events, but outputs [`metric`](#metric) events, allowing you to convert logs into one or more metrics.",event_types:["log","metric"],function_category:"convert",issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+log_to_metric%22",operating_systems:["Linux","MacOS","Windows"],sidebar_label:'log_to_metric|["log","metric"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/log_to_metric.rs",status:"prod-ready",title:"Log to Metric Transform",unsupported_operating_systems:[]},m={id:"reference/transforms/log_to_metric",title:"Log to Metric Transform",description:"The Vector `log_to_metric` transform accepts `log` events, but outputs [`metric`](#metric) events, allowing you to convert logs into one or more metrics.",source:"@site/docs/reference/transforms/log_to_metric.md",permalink:"/docs/reference/transforms/log_to_metric",editUrl:"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/log_to_metric.md",sidebar_label:'log_to_metric|["log","metric"]',sidebar:"docs",previous:{title:"JSON Parser Transform",permalink:"/docs/reference/transforms/json_parser"},next:{title:"Logfmt Parser Transform",permalink:"/docs/reference/transforms/logfmt_parser"}},p=[{value:"Configuration",id:"configuration",children:[{value:"metrics",id:"metrics",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Complex Processing",id:"complex-processing",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Multiple Metrics",id:"multiple-metrics",children:[]},{value:"Null Fields",id:"null-fields",children:[]},{value:"Reducing",id:"reducing",children:[]}]}],b={rightToc:p};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"log_to_metric")," transform\naccepts ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events, but outputs\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(l.b)("inlineCode",{parentName:"a"},"metric"))," events, allowing you to convert logs into\none or more metrics."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.log_to_metric]\n  type = "log_to_metric"\n\n  [[transforms.log_to_metric.metrics]]\n    type = "histogram"\n    field = "time"\n    name = "time_ms" # optional\n    tags.status = "{{status}}" # optional\n    tags.host = "{{host}}" # optional\n    tags.env = "${ENV}" # optional\n')),Object(l.b)(i.a,{filters:!0,mdxType:"Fields"},Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[],name:"metrics",path:null,relevantWhen:null,required:!0,templateable:!1,type:"[table]",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h3",{id:"metrics"},"metrics"),Object(l.b)("p",null,"A table of key/value pairs representing the keys to be added to the event."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["duration","parent.child"],groups:[],name:"field",path:"metrics",relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"field"},"field"),Object(l.b)("p",null,"The log field to use as the metric.\nSee ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#null-fields"}),"Null Fields")," for more info.")),Object(l.b)(o.a,{common:!1,defaultValue:!1,enumValues:null,examples:[!1,!0],groups:[],name:"increment_by_value",path:"metrics",relevantWhen:{type:"counter"},required:!1,templateable:!1,type:"bool",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"increment_by_value"},"increment_by_value"),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"true")," the metric will be incremented by the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," value. If ",Object(l.b)("inlineCode",{parentName:"p"},"false")," the\nmetric will be incremented by 1 regardless of the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," value.")),Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:["duration_total"],groups:[],name:"name",path:"metrics",relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"name"},"name"),Object(l.b)("p",null,"The name of the metric. Defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"<field>_total")," for ",Object(l.b)("inlineCode",{parentName:"p"},"counter")," and ",Object(l.b)("inlineCode",{parentName:"p"},"<field>"),"\nfor ",Object(l.b)("inlineCode",{parentName:"p"},"gauge"),".")),Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[],groups:[],name:"tags",path:"metrics",relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"tags"},"tags"),Object(l.b)("p",null,"Key/value pairs representing ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/#tags"}),"metric tags"),"."),Object(l.b)(i.a,{filters:!1,mdxType:"Fields"},Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[{host:"${HOSTNAME}"},{region:"us-east-1"},{status:"{{status}}"}],groups:[],name:"`[tag-name]`",path:"metrics.tags",relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h5",{id:"tag-name"},Object(l.b)("inlineCode",{parentName:"h5"},"[tag-name]")),Object(l.b)("p",null,"Key/value pairs representing ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/#tags"}),"metric tags"),".\nEnvironment variables and field interpolation is allowed.")))),Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:{counter:"A [counter metric type][docs.data-model.metric#counter].",gauge:"A [gauge metric type][docs.data-model.metric#gauge].",histogram:"A [distribution metric type][docs.data-model.metric#distribution].",set:"A [set metric type][docs.data-model.metric#set]."},examples:["counter","gauge","histogram","set"],groups:[],name:"type",path:"metrics",relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,warnings:[],mdxType:"Field"},Object(l.b)("h4",{id:"type"},"type"),Object(l.b)("p",null,"The metric type."))))),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)(c.a,{block:!0,defaultValue:"histograms",select:!1,values:[{label:"Histograms",value:"histograms"},{label:"Counts",value:"counts"},{label:"Sums",value:"sums"},{label:"Gauges",value:"gauges"},{label:"Set",value:"set"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"histograms",mdxType:"TabItem"},Object(l.b)("p",null,"This example demonstrates capturing timings in your logs."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "host": "10.22.11.222",\n  "message": "Sent 200 in 54.2ms",\n  "status": 200,\n  "time": 54.2,\n}\n')),Object(l.b)("p",null,"You can convert the ",Object(l.b)("inlineCode",{parentName:"p"},"time")," field into a ",Object(l.b)("inlineCode",{parentName:"p"},"distribution")," metric:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'tite="vector.toml"',tite:'"vector.toml"'}),'[transforms.log_to_metric]\n  type = "log_to_metric"\n\n  [[transforms.log_to_metric.metrics]]\n    type = "histogram"\n    field = "time"\n    name = "time_ms" # optional\n    tags.status = "{{status}}" # optional\n    tags.host = "{{host}}" # optional\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(l.b)("inlineCode",{parentName:"a"},"metric")," event")," will be output with the following\nstructure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="metric event"',title:'"metric','event"':!0}),'{\n  "name": "time_ms",\n  "kind": "incremental",\n  "tags": {\n    "status": "200",\n    "host": "10.22.11.222"\n  }\n  "distribution": {\n    "values": [54.2],\n    "sample_rates": [1.0]\n  }\n}\n')),Object(l.b)("p",null,"This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/sinks/prometheus/"}),Object(l.b)("inlineCode",{parentName:"a"},"prometheus")," sink"),") or will be aggregated in the store itself.")),Object(l.b)(s.a,{value:"counts",mdxType:"TabItem"},Object(l.b)("p",null,"This example demonstrates counting HTTP status codes."),Object(l.b)("p",null,"Given the following log line:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "host": "10.22.11.222",\n  "message": "Sent 200 in 54.2ms",\n  "status": 200\n}\n')),Object(l.b)("p",null,"You can count the number of responses by status code:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.log_to_metric]\n  type = "log_to_metric"\n\n  [[transforms.log_to_metric.metrics]]\n    type = "counter"\n    field = "status"\n    name = "response_total" # optional\n    tags.status = "{{status}}"\n    tags.host = "{{host}}"\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(l.b)("inlineCode",{parentName:"a"},"metric")," event")," will be output with the following\nstructure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="metric event"',title:'"metric','event"':!0}),'{\n  "name": "response_total",\n  "kind": "incremental",\n  "tags": {\n    "status": "200",\n    "host": "10.22.11.222"\n  }\n  "counter": {\n    "value": 1.0,\n  }\n}\n')),Object(l.b)("p",null,"This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/sinks/prometheus/"}),Object(l.b)("inlineCode",{parentName:"a"},"prometheus")," sink"),") or will be aggregated in the store itself.")),Object(l.b)(s.a,{value:"sums",mdxType:"TabItem"},Object(l.b)("p",null,"In this example we'll demonstrate computing a sum. The scenario we've chosen\nis to compute the total of orders placed."),Object(l.b)("p",null,"Given the following log line:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "host": "10.22.11.222",\n  "message": "Order placed for $122.20",\n  "total": 122.2\n}\n')),Object(l.b)("p",null,"You can reduce this log into a ",Object(l.b)("inlineCode",{parentName:"p"},"counter")," metric that increases by the\nfield's value:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.log_to_metric]\n  type = "log_to_metric"\n\n  [[transforms.log_to_metric.metrics]]\n    type = "counter"\n    field = "total"\n    name = "order_total" # optional\n    increment_by_value = true # optional\n    tags.host = "{{host}}" # optional\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(l.b)("inlineCode",{parentName:"a"},"metric")," event")," will be output with the following\nstructure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="metric event"',title:'"metric','event"':!0}),'{\n  "name": "order_total",\n  "kind": "incremental",\n  "tags": {\n    "status": "200",\n    "host": "10.22.11.222"\n  }\n  "counter": {\n    "value": 122.20,\n  }\n}\n')),Object(l.b)("p",null,"This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/sinks/prometheus/"}),Object(l.b)("inlineCode",{parentName:"a"},"prometheus")," sink"),") or will be aggregated in the store itself.")),Object(l.b)(s.a,{value:"gauges",mdxType:"TabItem"},Object(l.b)("p",null,"In this example we'll demonstrate creating a gauge that represents the current\nCPU load verages."),Object(l.b)("p",null,"Given the following log line:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "host": "10.22.11.222",\n  "message": "CPU activity sample",\n  "1m_load_avg": 78.2,\n  "5m_load_avg": 56.2,\n  "15m_load_avg": 48.7\n}\n')),Object(l.b)("p",null,"You can reduce this logs into multiple ",Object(l.b)("inlineCode",{parentName:"p"},"gauge")," metrics:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.log_to_metric]\n  type = "log_to_metric"\n\n  [[transforms.log_to_metric.metrics]]\n    type = "gauge"\n    field = "1m_load_avg"\n    tags.host = "{{host}}" # optional\n\n  [[transforms.log_to_metric.metrics]]\n    type = "gauge"\n    field = "5m_load_avg"\n    tags.host = "{{host}}" # optional\n\n  [[transforms.log_to_metric.metrics]]\n    type = "gauge"\n    field = "15m_load_avg"\n    tags.host = "{{host}}" # optional\n')),Object(l.b)("p",null,"Multiple ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(l.b)("inlineCode",{parentName:"a"},"metric")," events")," will be output with the following\nstructure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="Metric event 1"',title:'"Metric',event:!0,'1"':!0}),'{\n  "name": "1m_load_avg",\n  "kind": "absolute",\n  "tags": {\n    "host": "10.22.11.222"\n  },\n  "gauge": {\n    "value": 78.2\n  }\n}\n')),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="Metric event 2"',title:'"Metric',event:!0,'2"':!0}),'{\n  "name": "5m_load_avg",\n  "kind": "absolute",\n  "tags": {\n    "host": "10.22.11.222"\n  },\n  "gauge": {\n    "value": 56.2\n  }\n}\n')),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="Metric event 3"',title:'"Metric',event:!0,'3"':!0}),'{\n  "name": "15m_load_avg",\n  "kind": "absolute",\n  "tags": {\n    "host": "10.22.11.222"\n  },\n  "gauge": {\n    "value": 48.7\n  }\n}\n')),Object(l.b)("p",null,"This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/sinks/prometheus/"}),Object(l.b)("inlineCode",{parentName:"a"},"prometheus")," sink"),") or will be aggregated in the store itself.")),Object(l.b)(s.a,{value:"set",mdxType:"TabItem"},Object(l.b)("p",null,"In this example we'll demonstrate how to use sets. Sets are primarly a Statsd\nconcept that represent the number of unique values seens for a given metric.\nThe idea is that you pass the unique/high-cardinality value as the metric value\nand the metric store will count the number of unique values seen."),Object(l.b)("p",null,"For example, given the following log line:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="log event"',title:'"log','event"':!0}),'{\n  "host": "10.22.11.222",\n  "message": "Sent 200 in 54.2ms",\n  "remote_addr": "233.221.232.22"\n}\n')),Object(l.b)("p",null,"You can count the number of unique ",Object(l.b)("inlineCode",{parentName:"p"},"remote_addr")," values by using a set:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml",metastring:'title="vector.toml"',title:'"vector.toml"'}),'[transforms.log_to_metric]\n  type = "log_to_metric"\n\n  [[transforms.log_to_metric.metrics]]\n    type = "set"\n    field = "remote_addr"\n    tags.host = "{{host}}" # optional\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(l.b)("inlineCode",{parentName:"a"},"metric")," event")," will be output with the following\nstructure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:'title="metric event"',title:'"metric','event"':!0}),'{\n  "name": "remote_addr",\n  "kind": "incremental",\n  "tags": {\n    "host": "10.22.11.222"\n  },\n  "set": {\n    "values": ["233.221.232.22"]\n  }\n}\n')),Object(l.b)("p",null,"This metric will then proceed down the pipeline, and depending on the sink,\nwill be aggregated in Vector (such is the case for the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/sinks/prometheus/"}),Object(l.b)("inlineCode",{parentName:"a"},"prometheus")," sink"),") or will be aggregated in the store itself."))),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"complex-processing"},"Complex Processing"),Object(l.b)("p",null,"If you encounter limitations with the ",Object(l.b)("inlineCode",{parentName:"p"},"log_to_metric"),"\ntransform then we recommend using a ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://vector.dev/components/?functions%5B%5D=program"}),"runtime transform"),".\nThese transforms are designed for complex processing and give you the power of\nfull programming runtime."),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables")," section."),Object(l.b)("h3",{id:"multiple-metrics"},"Multiple Metrics"),Object(l.b)("p",null,"For clarification, when you convert a single ",Object(l.b)("inlineCode",{parentName:"p"},"log")," event into multiple ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#metric"}),Object(l.b)("inlineCode",{parentName:"a"},"metric")),"\nevents, the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#metric"}),Object(l.b)("inlineCode",{parentName:"a"},"metric"))," events are not emitted as a single array. They are emitted\nindividually, and the downstream components treat them as individual events.\nDownstream components are not aware they were derived from a single log event."),Object(l.b)("h3",{id:"null-fields"},"Null Fields"),Object(l.b)("p",null,"If the target log ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," contains a ",Object(l.b)("inlineCode",{parentName:"p"},"null")," value it will ignored, and a metric\nwill not be emitted."),Object(l.b)("h3",{id:"reducing"},"Reducing"),Object(l.b)("p",null,"It's important to understand that this transform does not reduce multiple logs\ninto a single metric. Instead, this transform converts logs into granular\nindividual metrics that can then be reduced at the edge. Where the reduction\nhappens depends on your metrics storage. For example, the\n",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/sinks/prometheus/"}),Object(l.b)("inlineCode",{parentName:"a"},"prometheus")," sink")," will reduce logs in the sink itself\nfor the next scrape, while other metrics sinks will proceed to forward the\nindividual metrics for reduction in the metrics storage itself."))}d.isMDXComponent=!0}}]);