(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{341:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return b})),o.d(t,"metadata",(function(){return d})),o.d(t,"rightToc",(function(){return m})),o.d(t,"default",(function(){return g}));var i=o(1),a=o(6),s=(o(0),o(942)),r=o(946),n=o(947),c=o(943),l=o(951),u=o(945),b={last_modified_on:"2020-05-01",$schema:"/.meta/.schemas/guides.json",title:"Send logs from a TCP, UDP, or UDS socket to Humio",description:"A simple guide to send logs from a TCP, UDP, or UDS socket to Humio in just a few minutes.",author_github:"https://github.com/binarylogic",cover_label:"Socket to Humio Logs Integration",tags:["type: tutorial","domain: sources","domain: sinks","source: socket","sink: humio_logs"],hide_pagination:!0},d={categories:[{name:"integrate",title:"Integrate",description:"Simple step-by-step integration guides.",permalink:"/guides/integrate"},{name:"sources",title:"Sources",description:null,permalink:"/guides/integrate/sources"},{name:"socket",title:"Socket",description:null,permalink:"/guides/integrate/sources/socket"}],coverLabel:"Socket to Humio Logs Integration",description:"A simple guide to send logs from a TCP, UDP, or UDS socket to Humio in just a few minutes.",permalink:"/guides/integrate/sources/socket/humio_logs",readingTime:"3 min read",source:"@site/guides/integrate/sources/socket/humio_logs.md",tags:[{label:"type: tutorial",permalink:"/guides/tags/type-tutorial"},{label:"domain: sources",permalink:"/guides/tags/domain-sources"},{label:"domain: sinks",permalink:"/guides/tags/domain-sinks"},{label:"source: socket",permalink:"/guides/tags/source-socket"},{label:"sink: humio_logs",permalink:"/guides/tags/sink-humio-logs"}],title:"Send logs from a TCP, UDP, or UDS socket to Humio",truncated:!1,prevItem:{title:"Send logs from a TCP, UDP, or UDS socket to an HTTP endpoint",permalink:"/guides/integrate/sources/socket/http"},nextItem:{title:"Send logs from a TCP, UDP, or UDS socket to InfluxDB",permalink:"/guides/integrate/sources/socket/influxdb_logs"}},m=[{value:"Background",id:"background",children:[{value:"What is Humio Logs?",id:"what-is-humio-logs",children:[]}]},{value:"Strategy",id:"strategy",children:[{value:"How This Guide Works",id:"how-this-guide-works",children:[]},{value:"What We&#39;ll Accomplish",id:"what-well-accomplish",children:[]}]},{value:"Tutorial",id:"tutorial",children:[{value:"Install Vector",id:"install-vector",children:[]},{value:"Configure Vector",id:"configure-vector",children:[]},{value:"Start Vector",id:"start-vector",children:[]}]},{value:"Next Steps",id:"next-steps",children:[]}],p={rightToc:m};function g(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(i.a)({},p,o,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Logs are an ",Object(s.b)("em",{parentName:"p"},"essential")," part of observing any\nservice; without them you are flying blind. But collecting and analyzing them\ncan be a real challenge -- especially at scale. Not only do you need to solve\nthe basic task of collecting your logs, but you must do it\nin a reliable, performant, and robust manner. Nothing is more frustrating than\nhaving your logs pipeline fall on it's face during an\noutage, or even worse, disrupt more important services!"),Object(s.b)("p",null,"Fear not! In this guide we'll show you how to send send logs from ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Network_socket"}),"a TCP, UDP, or UDS socket")," to ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://humio.com"}),"Humio"),"\nand build a logs pipeline that will be the backbone of\nyour observability strategy."),Object(s.b)("h2",{id:"background"},"Background"),Object(s.b)("h3",{id:"what-is-humio-logs"},"What is Humio Logs?"),Object(s.b)("p",null,Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://humio.com"}),"Humio")," is a time-series logging and aggregation platform for unrestricted, comprehensive event analysis, On-Premises or in the Cloud. With 1TB/day of raw log ingest/node, in-memory stream processing, and live, shareable dashboards and alerts, you can instantly and in real-time explore, monitor, and visualize any system\u2019s data."),Object(s.b)("h2",{id:"strategy"},"Strategy"),Object(s.b)("h3",{id:"how-this-guide-works"},"How This Guide Works"),Object(s.b)("p",null,"We'll be using ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://vector.dev"}),"Vector")," to accomplish this task. Vector\nis a ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/timberio/vector/stargazers"}),"popular")," ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/timberio/vector"}),"open-source")," utility for\nbuilding observability pipelines. It's written in ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.rust-lang.org/"}),"Rust"),", making it\nlightweight, ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"https://vector.dev/#performance"}),"ultra-fast")," and highly reliable. And\nwe'll be deploying Vector as a\n",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/setup/deployment/strategies/#service"}),"service"),"."),Object(s.b)("p",null,"The ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/setup/deployment/strategies/#service"}),"service deployment strategy")," treats Vector like a\nseparate service. It is designed to receive data from an upstream source and\nfan-out to one or more destinations.\nFor this guide, Vector will receive data from\na TCP, UDP, or UDS socket via Vector's\n",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/reference/sources/socket/"}),Object(s.b)("inlineCode",{parentName:"a"},"socket")," source"),".\nThe following diagram demonstrates how it works."),Object(s.b)(l.a,{platformName:null,sourceName:"socket",sinkName:"humio_logs",mdxType:"ServiceDiagram"}),Object(s.b)("h3",{id:"what-well-accomplish"},"What We'll Accomplish"),Object(s.b)("p",null,"To be clear, here's everything we'll accomplish in this short guide:"),Object(s.b)("ul",{className:"list--icons list--icons--checks list--indent"},Object(s.b)("li",null,"Accept log data over a TCP, UDP, or UDS socket.",Object(s.b)("ul",null,Object(s.b)("li",null,"Automatically enrich logs with host-level context."))),Object(s.b)("li",null,"Send logs to the Humio logging service.",Object(s.b)("ul",null,Object(s.b)("li",null,"Batch data to maximize throughput."),Object(s.b)("li",null,"Automatically retry failed requests, with backoff."),Object(s.b)("li",null,"Buffer your data in-memory or on-disk for performance and durability."))),Object(s.b)("li",{className:"list--icons--arrow text--pink text--bold"},"All in just a few minutes!")),Object(s.b)("h2",{id:"tutorial"},"Tutorial"),Object(s.b)(u.a,{headingDepth:3,mdxType:"Steps"},Object(s.b)("ol",null,Object(s.b)("li",null,Object(s.b)("h3",{id:"install-vector"},"Install Vector"),Object(s.b)(n.a,{mdxType:"InstallationCommand"}),Object(s.b)("p",null,"Or choose your ",Object(s.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/setup/installation/"}),"preferred method"),".")),Object(s.b)("li",null,Object(s.b)("h3",{id:"configure-vector"},"Configure Vector"),Object(s.b)(r.a,{format:"toml",path:"vector.toml",sourceName:"socket",sinkName:"humio_logs",mdxType:"ConfigExample"})),Object(s.b)("li",null,Object(s.b)("h3",{id:"start-vector"},"Start Vector"),Object(s.b)("pre",null,Object(s.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"vector --config vector.toml\n")),Object(s.b)("p",null,"That's it! Simple and to the point. Hit ",Object(s.b)("inlineCode",{parentName:"p"},"ctrl+c")," to exit.")))),Object(s.b)("h2",{id:"next-steps"},"Next Steps"),Object(s.b)("p",null,"Vector is ",Object(s.b)("em",{parentName:"p"},"powerful")," utility and we're just scratching the surface in this\nguide. Here are a few pages we recommend that demonstrate the power and\nflexibility of Vector:"),Object(s.b)(c.a,{to:"https://github.com/timberio/vector",leftIcon:"github",target:"_blank",mdxType:"Jump"},Object(s.b)("div",{className:"title"},"Vector Github repo ",Object(s.b)("span",{className:"badge badge--primary"},Object(s.b)("i",{className:"feather icon-star"})," 4k")),Object(s.b)("div",{className:"sub-title"},"Vector is free and open-source!")),Object(s.b)(c.a,{to:"/guides/getting-started/",leftIcon:"book",mdxType:"Jump"},Object(s.b)("div",{className:"title"},"Vector getting started series"),Object(s.b)("div",{className:"sub-title"},"Go from zero to production in under 10 minutes!")),Object(s.b)(c.a,{to:"/docs/about/what-is-vector/",leftIcon:"book",mdxType:"Jump"},Object(s.b)("div",{className:"title"},"Vector documentation"),Object(s.b)("div",{className:"sub-title"},"Thoughtful, detailed docs that respect your time.")))}g.isMDXComponent=!0}}]);