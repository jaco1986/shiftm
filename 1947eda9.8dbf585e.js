(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{251:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(1),r=(a(0),a(1118)),c=a(1155),o=a(1153),b=a(1152);const l={last_modified_on:"2020-06-09",title:"Process Management",description:"How to manage the Vector process, such as starting, stopping, and reloading."},i={id:"administration/process-management",title:"Process Management",description:"How to manage the Vector process, such as starting, stopping, and reloading.",source:"@site/docs/administration/process-management.md",permalink:"/docs/administration/process-management",sidebar:"docs",previous:{title:"Administration",permalink:"/docs/administration"},next:{title:"Monitoring",permalink:"/docs/administration/monitoring"}},s=[{value:"Starting",id:"starting",children:[{value:"Command",id:"command",children:[]},{value:"Flags",id:"flags",children:[]},{value:"Daemonizing",id:"daemonizing",children:[]}]},{value:"Stopping",id:"stopping",children:[{value:"Command",id:"command-1",children:[]},{value:"Graceful Shutdown",id:"graceful-shutdown",children:[]},{value:"Force Killing",id:"force-killing",children:[]},{value:"Exit Codes",id:"exit-codes",children:[]}]},{value:"Reloading",id:"reloading",children:[{value:"Command",id:"command-2",children:[]},{value:"Automatic Reload On Changes",id:"automatic-reload-on-changes",children:[]},{value:"Configuration Errors",id:"configuration-errors",children:[]},{value:"Graceful Pipeline Transitioning",id:"graceful-pipeline-transitioning",children:[]}]}],d={rightToc:s};function p({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},d,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This document covers how to manage the Vector process using various interfaces.\nHow you manage the Vector process is largely dependent on how you installed\nVector."),Object(r.b)("h2",{id:"starting"},"Starting"),Object(r.b)("h3",{id:"command"},"Command"),Object(r.b)(o.a,{block:!1,centered:!0,groupId:"interfaces",placeholder:"How did you install Vector?",select:!0,size:null,values:[{group:"Package managers",label:"DPKG",value:"dpkg"},{group:"Platforms",label:"Docker CLI",value:"docker-cli"},{group:"Platforms",label:"Docker Compose",value:"docker-compose"},{group:"Package managers",label:"Homebrew",value:"homebrew"},{group:"Package managers",label:"MSI",value:"msi"},{group:"Package managers",label:"Nix",value:"nix"},{group:"Package managers",label:"RPM",value:"rpm"},{group:"Nones",label:"Vector CLI",value:"vector-cli"}],mdxType:"Tabs"},Object(r.b)(b.a,{value:"dpkg",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl start vector\n"))),Object(r.b)(b.a,{value:"docker-cli",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker run \\\n  -v $PWD/vector.toml:/etc/vector/vector.toml:ro \\\n  timberio/vector:latest-alpine\n")),Object(r.b)(c.a,{mdxType:"CodeExplanation"},Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The ",Object(r.b)("inlineCode",{parentName:"li"},"-v $PWD/vector.to...")," flag passes your custom configuration to Vector."),Object(r.b)("li",{parentName:"ul"},"The ",Object(r.b)("inlineCode",{parentName:"li"},"timberio/vector:latest-alpine")," is the default image we've chosen, you are welcome to use ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/setup/installation/platforms/docker/#variants"}),"other image variants"),".")))),Object(r.b)(b.a,{value:"docker-compose",mdxType:"TabItem"}),Object(r.b)(b.a,{value:"homebrew",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"brew services start vector\n"))),Object(r.b)(b.a,{value:"msi",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bat"}),".\\bin\\vector --config config\\vector.toml\n"))),Object(r.b)(b.a,{value:"nix",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector --config /etc/vector/vector.toml\n")),Object(r.b)(c.a,{mdxType:"CodeExplanation"},Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"vector")," is placed in your ",Object(r.b)("inlineCode",{parentName:"li"},"$PATH"),"."),Object(r.b)("li",{parentName:"ul"},"You must create a ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/setup/configuration/"}),"Vector configuration file")," to\nsuccessfully start Vector.")))),Object(r.b)(b.a,{value:"rpm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl start vector\n"))),Object(r.b)(b.a,{value:"vector-cli",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector --config vector.toml\n")))),Object(r.b)("h3",{id:"flags"},"Flags"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Flag"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"})))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("strong",{parentName:"td"},"Required")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-c, --config <path>")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Path the Vector ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/setup/configuration/"}),"configuration file"),"."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("strong",{parentName:"td"},"Optional")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-q, --quiet")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Raises the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"warn"),"."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-qq")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Raises the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"error"),"."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-qqq")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Turns logging off."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-r, --require-healthy")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Causes vector to immediately exit if any sinks fail their healthchecks."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-t, --threads")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Limits the number of internal threads Vector can spawn."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-v, --verbose")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Drops the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"debug"),"."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-vv")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Drops the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"trace"),", the lowest level possible."),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-w, --watch-config")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Vector will watch for changes in ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/setup/configuration/"}),"configuration file"),", and reload accordingly. (Mac/Linux only)"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))))),Object(r.b)("h3",{id:"daemonizing"},"Daemonizing"),Object(r.b)("p",null,"Vector does not ",Object(r.b)("em",{parentName:"p"},"directly")," offer a way to daemonize the Vector process. We\nhighly recommend that you use a utility like ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://systemd.io/"}),"Systemd")," to\ndaemonize and manage your processes. Vector provides a\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/timberio/vector/blob/master/distribution/systemd/vector.service"}),Object(r.b)("inlineCode",{parentName:"a"},"vector.service")," file")," for Systemd."),Object(r.b)("h2",{id:"stopping"},"Stopping"),Object(r.b)("p",null,"The Vector process can be stopped by sending it a ",Object(r.b)("inlineCode",{parentName:"p"},"SIGTERM")," process signal:"),Object(r.b)("h3",{id:"command-1"},"Command"),Object(r.b)(o.a,{block:!1,centered:!0,groupId:"interfaces",placeholder:"How did you install Vector?",select:!0,size:null,values:[{group:"Package managers",label:"DPKG",value:"dpkg"},{group:"Platforms",label:"Docker CLI",value:"docker-cli"},{group:"Platforms",label:"Docker Compose",value:"docker-compose"},{group:"Package managers",label:"Homebrew",value:"homebrew"},{group:"Package managers",label:"MSI",value:"msi"},{group:"Package managers",label:"Nix",value:"nix"},{group:"Package managers",label:"RPM",value:"rpm"},{group:"Nones",label:"Vector CLI",value:"vector-cli"}],mdxType:"Tabs"},Object(r.b)(b.a,{value:"dpkg",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl stop vector\n"))),Object(r.b)(b.a,{value:"docker-cli",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker stop timberio/vector\n"))),Object(r.b)(b.a,{value:"docker-compose",mdxType:"TabItem"}),Object(r.b)(b.a,{value:"homebrew",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"brew services stop vector\n"))),Object(r.b)(b.a,{value:"msi",mdxType:"TabItem"},Object(r.b)("p",null,"The Vector MSI package does not install Vector into a process manager.\nTherefore, you are responsible for stopping Vector based on how you started it.")),Object(r.b)(b.a,{value:"nix",mdxType:"TabItem"},Object(r.b)("p",null,"The Vector Nix package does not install Vector into a process manager.\nTherefore, you are responsible for stopping Vector based on how you started it.")),Object(r.b)(b.a,{value:"rpm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl stop vector\n"))),Object(r.b)(b.a,{value:"vector-cli",mdxType:"TabItem"},Object(r.b)("p",null,"If you are starting Vector directly from the Vector CLI then you are responsible\nfor stopping Vector depending on how you are managing the process. If you're\nin the terminal, hitting ",Object(r.b)("inlineCode",{parentName:"p"},"ctrl+c")," will exit the process."))),Object(r.b)("h3",{id:"graceful-shutdown"},"Graceful Shutdown"),Object(r.b)("p",null,"Vector is designed to gracefully shutdown within 20 seconds when a ",Object(r.b)("inlineCode",{parentName:"p"},"SIGTERM"),"\nprocess signal is received. The shutdown process is as follows:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Stop accepting new data for all ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sources/"}),"sources"),"."),Object(r.b)("li",{parentName:"ol"},"Gracefully close any open connections with a 20 second timeout."),Object(r.b)("li",{parentName:"ol"},"Flush any sink buffers with a 20 second timeout."),Object(r.b)("li",{parentName:"ol"},"Exit the process with a 1 code.")),Object(r.b)("h3",{id:"force-killing"},"Force Killing"),Object(r.b)("p",null,"If Vector is forcefully killed there is potential for losing any in-flight\ndata. To mitigate this we recommend enabling on-disk buffers and avoiding\nforceful shutdowns whenever possible."),Object(r.b)("h3",{id:"exit-codes"},"Exit Codes"),Object(r.b)("p",null,"If Vector fails to start it will exit with one of the preferred exit codes\nas defined by ",Object(r.b)("inlineCode",{parentName:"p"},"sysexits.h"),". A full list of exit codes can be found in the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.rs/exitcode/1.1.2/exitcode/#constants"}),Object(r.b)("inlineCode",{parentName:"a"},"exitcodes")," Rust crate"),". The relevant codes that Vector uses\nare:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Code"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"No error.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"78")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Bad ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/setup/configuration/"}),"configuration"),".")))),Object(r.b)("h2",{id:"reloading"},"Reloading"),Object(r.b)("p",null,"Vector can be reloaded, on the fly, to recognize any configuration changes by\nsending the Vector process a ",Object(r.b)("inlineCode",{parentName:"p"},"SIGHUP")," signal."),Object(r.b)("h3",{id:"command-2"},"Command"),Object(r.b)(o.a,{block:!1,centered:!0,groupId:"interfaces",placeholder:"How did you install Vector?",select:!0,size:null,values:[{group:"Package managers",label:"DPKG",value:"dpkg"},{group:"Platforms",label:"Docker CLI",value:"docker-cli"},{group:"Platforms",label:"Docker Compose",value:"docker-compose"},{group:"Package managers",label:"Homebrew",value:"homebrew"},{group:"Package managers",label:"MSI",value:"msi"},{group:"Package managers",label:"Nix",value:"nix"},{group:"Package managers",label:"RPM",value:"rpm"},{group:"Nones",label:"Vector CLI",value:"vector-cli"}],mdxType:"Tabs"},Object(r.b)(b.a,{value:"dpkg",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl stop vector\n"))),Object(r.b)(b.a,{value:"docker-cli",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker stop timberio/vector\n"))),Object(r.b)(b.a,{value:"docker-compose",mdxType:"TabItem"}),Object(r.b)(b.a,{value:"homebrew",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"brew services stop vector\n"))),Object(r.b)(b.a,{value:"msi",mdxType:"TabItem"},Object(r.b)("p",null,"The Vector MSI package does not install Vector into a process manager.\nTherefore, you are responsible for stopping Vector based on how you started it.")),Object(r.b)(b.a,{value:"nix",mdxType:"TabItem"},Object(r.b)("p",null,"The Vector Nix package does not install Vector into a process manager.\nTherefore, you are responsible for stopping Vector based on how you started it.")),Object(r.b)(b.a,{value:"rpm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl stop vector\n"))),Object(r.b)(b.a,{value:"vector-cli",mdxType:"TabItem"},Object(r.b)("p",null,"If you are starting Vector directly from the Vector CLI then you are responsible\nfor stopping Vector depending on how you are managing the process. If you're\nin the terminal, hitting ",Object(r.b)("inlineCode",{parentName:"p"},"ctrl+c")," will exit the process."))),Object(r.b)("h3",{id:"automatic-reload-on-changes"},"Automatic Reload On Changes"),Object(r.b)("p",null,"You can automatically reload Vector's configuration file when it changes via\nthe ",Object(r.b)("inlineCode",{parentName:"p"},"-w")," or ",Object(r.b)("inlineCode",{parentName:"p"},"--watch-config")," flag upon ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#starting"}),"starting"),". This is\nparticularly helpful in scenarios where configuration is managed for you, such\nas Kubernetes."),Object(r.b)("h3",{id:"configuration-errors"},"Configuration Errors"),Object(r.b)("p",null,"When Vector is reloaded it proceeds to read the new configuration file from\ndisk. If the file has errors it will be logged to ",Object(r.b)("inlineCode",{parentName:"p"},"STDOUT")," and ignored,\npreserving any previous configuration that was set. If the process exits you\nwill not be able to restart the process since it will proceed to use the\nnew configuration file."),Object(r.b)("h3",{id:"graceful-pipeline-transitioning"},"Graceful Pipeline Transitioning"),Object(r.b)("p",null,"Vector will perform a diff between the new and old configuration, determining\nwhich sinks and sources should be started and shutdown and ensures the\ntransition from the old to new pipeline is graceful."))}p.isMDXComponent=!0}}]);